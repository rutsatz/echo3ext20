Index: src/server-java/app/nextapp/echo/app/SplitPane.java
===================================================================
--- src/server-java/app/nextapp/echo/app/SplitPane.java	(revision 1230)
+++ src/server-java/app/nextapp/echo/app/SplitPane.java	(working copy)
@@ -183,7 +183,7 @@
      *         </ul>
      */
     public int getOrientation() {
-        Integer orientation = (Integer) getProperty(PROPERTY_ORIENTATION); 
+        Integer orientation = (Integer) getComponentProperty(PROPERTY_ORIENTATION); 
         return orientation == null ? ORIENTATION_VERTICAL : orientation.intValue();
     }
     
@@ -193,7 +193,7 @@
      * @return the color
      */
     public Color getSeparatorColor() {
-        return (Color) getProperty(PROPERTY_SEPARATOR_COLOR);
+        return (Color) getComponentProperty(PROPERTY_SEPARATOR_COLOR);
     }
     
     /**
@@ -205,7 +205,7 @@
      * @return the separator width
      */
     public Extent getSeparatorHeight() {
-        return (Extent) getProperty(PROPERTY_SEPARATOR_HEIGHT);
+        return (Extent) getComponentProperty(PROPERTY_SEPARATOR_HEIGHT);
     }
     
     /**
@@ -215,7 +215,7 @@
      * @return the image
      */
     public FillImage getSeparatorHorizontalImage() {
-        return (FillImage) getProperty(PROPERTY_SEPARATOR_HORIZONTAL_IMAGE);
+        return (FillImage) getComponentProperty(PROPERTY_SEPARATOR_HORIZONTAL_IMAGE);
     }
     
     /**
@@ -226,7 +226,7 @@
      * @return the separator position
      */
     public Extent getSeparatorPosition() {
-        return (Extent) getProperty(PROPERTY_SEPARATOR_POSITION);
+        return (Extent) getComponentProperty(PROPERTY_SEPARATOR_POSITION);
     }
     
     /**
@@ -236,7 +236,7 @@
      * @return the image
      */
     public FillImage getSeparatorVerticalImage() {
-        return (FillImage) getProperty(PROPERTY_SEPARATOR_VERTICAL_IMAGE);
+        return (FillImage) getComponentProperty(PROPERTY_SEPARATOR_VERTICAL_IMAGE);
     }
     
     /**
@@ -248,7 +248,7 @@
      * @return the separator width
      */
     public Extent getSeparatorWidth() {
-        return (Extent) getProperty(PROPERTY_SEPARATOR_WIDTH);
+        return (Extent) getComponentProperty(PROPERTY_SEPARATOR_WIDTH);
     }
     
     /**
@@ -257,7 +257,7 @@
      * @return true if the <code>SplitPane</code> is resizable
      */
     public boolean isResizable() {
-        Boolean value = (Boolean) getProperty(PROPERTY_RESIZABLE);
+        Boolean value = (Boolean) getComponentProperty(PROPERTY_RESIZABLE);
         return value == null ? false : value.booleanValue();
     }
 
@@ -303,7 +303,7 @@
      *        </ul>
      */
     public void setOrientation(int newValue) {
-        setProperty(PROPERTY_ORIENTATION, new Integer(newValue));
+        setComponentProperty(PROPERTY_ORIENTATION, new Integer(newValue));
     }
     
     /**
@@ -314,7 +314,7 @@
      *        not
      */
     public void setResizable(boolean newValue) {
-        setProperty(PROPERTY_RESIZABLE, new Boolean(newValue));
+        setComponentProperty(PROPERTY_RESIZABLE, new Boolean(newValue));
     }
     
     /**
@@ -323,7 +323,7 @@
      * @param newValue the new color
      */
     public void setSeparatorColor(Color newValue) {
-        setProperty(PROPERTY_SEPARATOR_COLOR, newValue);
+        setComponentProperty(PROPERTY_SEPARATOR_COLOR, newValue);
     }
     
     /**
@@ -336,7 +336,7 @@
      */
     public void setSeparatorHeight(Extent newValue) {
         Extent.validate(newValue, Extent.PX);
-        setProperty(PROPERTY_SEPARATOR_HEIGHT, newValue);
+        setComponentProperty(PROPERTY_SEPARATOR_HEIGHT, newValue);
     }
     
     /**
@@ -346,7 +346,7 @@
      * @param newValue the new image
      */
     public void setSeparatorHorizontalImage(FillImage newValue) {
-        setProperty(PROPERTY_SEPARATOR_HORIZONTAL_IMAGE, newValue);
+        setComponentProperty(PROPERTY_SEPARATOR_HORIZONTAL_IMAGE, newValue);
     }
 
     /**
@@ -360,7 +360,7 @@
         if (newValue != null && newValue.getValue() < 0) {
             throw new IllegalArgumentException("Extent value may not be negative.");
         }
-        setProperty(PROPERTY_SEPARATOR_POSITION, newValue);
+        setComponentProperty(PROPERTY_SEPARATOR_POSITION, newValue);
     }
     
     /**
@@ -370,7 +370,7 @@
      * @param newValue the new image
      */
     public void setSeparatorVerticalImage(FillImage newValue) {
-        setProperty(PROPERTY_SEPARATOR_VERTICAL_IMAGE, newValue);
+        setComponentProperty(PROPERTY_SEPARATOR_VERTICAL_IMAGE, newValue);
     }
     
     /**
@@ -383,6 +383,6 @@
      */
     public void setSeparatorWidth(Extent newValue) {
         Extent.validate(newValue, Extent.PX);
-        setProperty(PROPERTY_SEPARATOR_WIDTH, newValue);
+        setComponentProperty(PROPERTY_SEPARATOR_WIDTH, newValue);
     }
 }
Index: src/server-java/app/nextapp/echo/app/Panel.java
===================================================================
--- src/server-java/app/nextapp/echo/app/Panel.java	(revision 1230)
+++ src/server-java/app/nextapp/echo/app/Panel.java	(working copy)
@@ -46,7 +46,7 @@
      * @return the border
      */
     public Border getBorder() {
-        return (Border) getProperty(PROPERTY_BORDER);
+        return (Border) getComponentProperty(PROPERTY_BORDER);
     }
     
     /**
@@ -57,7 +57,7 @@
      * @return the inset
      */
     public Insets getInsets() {
-        return (Insets) getProperty(PROPERTY_INSETS);
+        return (Insets) getComponentProperty(PROPERTY_INSETS);
     }
     
      /**
@@ -66,7 +66,7 @@
      * @param newValue the new border
      */
     public void setBorder(Border newValue) {
-        setProperty(PROPERTY_BORDER, newValue);
+        setComponentProperty(PROPERTY_BORDER, newValue);
     }
     
     /**
@@ -77,6 +77,6 @@
      * @param newValue the new inset
      */
     public void setInsets(Insets newValue) {
-        setProperty(PROPERTY_INSETS, newValue);
+        setComponentProperty(PROPERTY_INSETS, newValue);
     }
 }
Index: src/server-java/app/nextapp/echo/app/Component.java
===================================================================
--- src/server-java/app/nextapp/echo/app/Component.java	(revision 1230)
+++ src/server-java/app/nextapp/echo/app/Component.java	(working copy)
@@ -719,7 +719,7 @@
      * @param propertyName the property name
      * @return the property value
      */
-    public final Object getProperty(String propertyName) {
+    public final Object getComponentProperty(String propertyName) {
         return localStyle.getProperty(propertyName);
     }
     
@@ -1330,10 +1330,22 @@
      * @param newValue the new background <code>Color</code>
      */
     public void setBackground(Color newValue) {
-        setProperty(PROPERTY_BACKGROUND, newValue);
+        setComponentProperty(PROPERTY_BACKGROUND, newValue);
     }
     
     /**
+     * Sets the child components for this container, causing
+     * any existing children to be removed.
+     * @param components the child components for this container.
+     */
+    public void setComponents(Component[] components) {
+        removeAll();
+        for (int i = 0; i < components.length; i++) {
+            add(components[i]);
+        }
+    }
+    
+    /**
      * Sets the enabled state of the <code>Component</code>.
      * 
      * @param newValue the new state
@@ -1381,7 +1393,7 @@
      * @param newValue the new <code>Font</code>
      */
     public void setFont(Font newValue) {
-        setProperty(PROPERTY_FONT, newValue);
+        setComponentProperty(PROPERTY_FONT, newValue);
     }
     
     /**
@@ -1390,7 +1402,7 @@
      * @param newValue the new foreground <code>Color</code>
      */
     public void setForeground(Color newValue) {
-        setProperty(PROPERTY_FOREGROUND, newValue);
+        setComponentProperty(PROPERTY_FOREGROUND, newValue);
     }
     
     /**
@@ -1427,7 +1439,7 @@
      * @see LayoutData
      */
     public void setLayoutData(LayoutData newValue) {
-        setProperty(PROPERTY_LAYOUT_DATA, newValue);
+        setComponentProperty(PROPERTY_LAYOUT_DATA, newValue);
     }
     
     /**
@@ -1460,9 +1472,9 @@
      * 
      * @param propertyName the name of the property
      * @param newValue the value of the property
-     * @see #getProperty(java.lang.String)
+     * @see #getComponentProperty(java.lang.String)
      */
-    public void setProperty(String propertyName, Object newValue) {
+    public void setComponentProperty(String propertyName, Object newValue) {
         Object oldValue = localStyle.getProperty(propertyName);
         localStyle.setProperty(propertyName, newValue);
         firePropertyChange(propertyName, oldValue, newValue);
Index: src/server-java/app/nextapp/echo/app/text/TextComponent.java
===================================================================
--- src/server-java/app/nextapp/echo/app/text/TextComponent.java	(revision 1230)
+++ src/server-java/app/nextapp/echo/app/text/TextComponent.java	(working copy)
@@ -140,7 +140,7 @@
      * @return the action command
      */
     public String getActionCommand() {
-        return (String) getProperty(PROPERTY_ACTION_COMMAND);
+        return (String) getComponentProperty(PROPERTY_ACTION_COMMAND);
     }
     
     /**
@@ -149,7 +149,7 @@
      * @return the alignment
      */
     public Alignment getAlignment() {
-        return (Alignment) getProperty(PROPERTY_ALIGNMENT);
+        return (Alignment) getComponentProperty(PROPERTY_ALIGNMENT);
     }
     
     /**
@@ -158,7 +158,7 @@
      * @return the background image
      */
     public FillImage getBackgroundImage() {
-        return (FillImage) getProperty(PROPERTY_BACKGROUND_IMAGE);
+        return (FillImage) getComponentProperty(PROPERTY_BACKGROUND_IMAGE);
     }
     
     /**
@@ -167,7 +167,7 @@
      * @return the border
      */
     public Border getBorder() {
-        return (Border) getProperty(PROPERTY_BORDER);
+        return (Border) getComponentProperty(PROPERTY_BORDER);
     }
     
     /**
@@ -177,7 +177,7 @@
      * @return the color
      */
     public Color getDisabledBackground() {
-        return (Color) getProperty(PROPERTY_DISABLED_BACKGROUND);
+        return (Color) getComponentProperty(PROPERTY_DISABLED_BACKGROUND);
     }
 
     /**
@@ -187,7 +187,7 @@
      * @return the background image
      */
     public FillImage getDisabledBackgroundImage() {
-        return (FillImage) getProperty(PROPERTY_DISABLED_BACKGROUND_IMAGE);
+        return (FillImage) getComponentProperty(PROPERTY_DISABLED_BACKGROUND_IMAGE);
     }
 
     /**
@@ -197,7 +197,7 @@
      * @return the border
      */
     public Border getDisabledBorder() {
-        return (Border) getProperty(PROPERTY_DISABLED_BORDER);
+        return (Border) getComponentProperty(PROPERTY_DISABLED_BORDER);
     }
 
     /**
@@ -207,7 +207,7 @@
      * @return the font
      */
     public Font getDisabledFont() {
-        return (Font) getProperty(PROPERTY_DISABLED_FONT);
+        return (Font) getComponentProperty(PROPERTY_DISABLED_FONT);
     }
 
     /**
@@ -217,7 +217,7 @@
      * @return the color
      */
     public Color getDisabledForeground() {
-        return (Color) getProperty(PROPERTY_DISABLED_FOREGROUND);
+        return (Color) getComponentProperty(PROPERTY_DISABLED_FOREGROUND);
     }
 
     /**
@@ -237,7 +237,7 @@
      * @return the height
      */
     public Extent getHeight() {
-        return (Extent) getProperty(PROPERTY_HEIGHT);
+        return (Extent) getComponentProperty(PROPERTY_HEIGHT);
     }
     
     /**
@@ -246,7 +246,7 @@
      * @return the scroll bar position
      */
     public Extent getHorizontalScroll() {
-        return (Extent) getProperty(PROPERTY_HORIZONTAL_SCROLL);
+        return (Extent) getComponentProperty(PROPERTY_HORIZONTAL_SCROLL);
     }
     
     /**
@@ -255,7 +255,7 @@
      * @return the insets
      */
     public Insets getInsets() {
-        return (Insets) getProperty(PROPERTY_INSETS);
+        return (Insets) getComponentProperty(PROPERTY_INSETS);
     }
     
     /**
@@ -265,7 +265,7 @@
      * @return the maximum length, or -1 if no value is specified
      */
     public int getMaximumLength() {
-        Integer value = (Integer) getProperty(PROPERTY_MAXIMUM_LENGTH);
+        Integer value = (Integer) getComponentProperty(PROPERTY_MAXIMUM_LENGTH);
         return value == null ? -1 : value.intValue();
     }
     
@@ -286,7 +286,7 @@
      * @return the tool tip text
      */
     public String getToolTipText() {
-        return (String) getProperty(PROPERTY_TOOL_TIP_TEXT);
+        return (String) getComponentProperty(PROPERTY_TOOL_TIP_TEXT);
     }
     
     /**
@@ -295,7 +295,7 @@
      * @return the scroll bar position
      */
     public Extent getVerticalScroll() {
-        return (Extent) getProperty(PROPERTY_VERTICAL_SCROLL);
+        return (Extent) getComponentProperty(PROPERTY_VERTICAL_SCROLL);
     }
     
     /**
@@ -306,7 +306,7 @@
      * @return the width
      */
     public Extent getWidth() {
-        return (Extent) getProperty(PROPERTY_WIDTH);
+        return (Extent) getComponentProperty(PROPERTY_WIDTH);
     }
     
     /**
@@ -366,7 +366,7 @@
      * @param newValue the new action command
      */
     public void setActionCommand(String newValue) {
-        setProperty(PROPERTY_ACTION_COMMAND, newValue);
+        setComponentProperty(PROPERTY_ACTION_COMMAND, newValue);
     }
 
     /**
@@ -375,7 +375,7 @@
      * @param newValue the new alignment
      */
     public void setAlignment(Alignment newValue) {
-        setProperty(PROPERTY_ALIGNMENT, newValue);
+        setComponentProperty(PROPERTY_ALIGNMENT, newValue);
     }
     
     /**
@@ -384,7 +384,7 @@
      * @param newValue the new background image
      */
     public void setBackgroundImage(FillImage newValue) {
-        setProperty(PROPERTY_BACKGROUND_IMAGE, newValue);
+        setComponentProperty(PROPERTY_BACKGROUND_IMAGE, newValue);
     }
     
     /**
@@ -393,7 +393,7 @@
      * @param newValue the new border
      */
     public void setBorder(Border newValue) {
-        setProperty(PROPERTY_BORDER, newValue);
+        setComponentProperty(PROPERTY_BORDER, newValue);
     }
 
     /**
@@ -402,7 +402,7 @@
      * @param newValue the new <code>Color</code>
      */
     public void setDisabledBackground(Color newValue) {
-        setProperty(PROPERTY_DISABLED_BACKGROUND, newValue);
+        setComponentProperty(PROPERTY_DISABLED_BACKGROUND, newValue);
     }
 
     /**
@@ -411,7 +411,7 @@
      * @param newValue the new background image
      */
     public void setDisabledBackgroundImage(FillImage newValue) {
-        setProperty(PROPERTY_DISABLED_BACKGROUND_IMAGE, newValue);
+        setComponentProperty(PROPERTY_DISABLED_BACKGROUND_IMAGE, newValue);
     }
 
     /**
@@ -420,7 +420,7 @@
      * @param newValue the new border
      */
     public void setDisabledBorder(Border newValue) {
-        setProperty(PROPERTY_DISABLED_BORDER, newValue);
+        setComponentProperty(PROPERTY_DISABLED_BORDER, newValue);
     }
 
     /**
@@ -429,7 +429,7 @@
      * @param newValue the new <code>Font</code>
      */
     public void setDisabledFont(Font newValue) {
-        setProperty(PROPERTY_DISABLED_FONT, newValue);
+        setComponentProperty(PROPERTY_DISABLED_FONT, newValue);
     }
 
     /**
@@ -438,7 +438,7 @@
      * @param newValue the new <code>Color</code>
      */
     public void setDisabledForeground(Color newValue) {
-        setProperty(PROPERTY_DISABLED_FOREGROUND, newValue);
+        setComponentProperty(PROPERTY_DISABLED_FOREGROUND, newValue);
     }
 
     /**
@@ -466,7 +466,7 @@
      * @param newValue the new height
      */
     public void setHeight(Extent newValue) {
-        setProperty(PROPERTY_HEIGHT, newValue);
+        setComponentProperty(PROPERTY_HEIGHT, newValue);
     }
     
     /**
@@ -476,7 +476,7 @@
      * @param newValue the new scroll bar position
      */
     public void setHorizontalScroll(Extent newValue) {
-        setProperty(PROPERTY_HORIZONTAL_SCROLL, newValue);
+        setComponentProperty(PROPERTY_HORIZONTAL_SCROLL, newValue);
     }
     
     /**
@@ -485,7 +485,7 @@
      * @param newValue the new insets
      */
     public void setInsets(Insets newValue) {
-        setProperty(PROPERTY_INSETS, newValue);
+        setComponentProperty(PROPERTY_INSETS, newValue);
     }
     
     /**
@@ -497,9 +497,9 @@
      */
     public void setMaximumLength(int newValue) {
         if (newValue < 0) {
-            setProperty(PROPERTY_MAXIMUM_LENGTH, null);
+            setComponentProperty(PROPERTY_MAXIMUM_LENGTH, null);
         } else {
-            setProperty(PROPERTY_MAXIMUM_LENGTH, new Integer(newValue));
+            setComponentProperty(PROPERTY_MAXIMUM_LENGTH, new Integer(newValue));
         }
     }
     
@@ -509,7 +509,7 @@
      * @param newValue the new text
      */
     public void setText(String newValue) {
-        Integer maxLength = (Integer) getProperty(PROPERTY_MAXIMUM_LENGTH);
+        Integer maxLength = (Integer) getComponentProperty(PROPERTY_MAXIMUM_LENGTH);
         if (newValue != null && maxLength != null && maxLength.intValue() > 0 
                 && newValue.length() > maxLength.intValue()) {
             getDocument().setText(newValue.substring(0, maxLength.intValue()));
@@ -525,7 +525,7 @@
      * @param newValue the new tool tip text
      */
     public void setToolTipText(String newValue) {
-        setProperty(PROPERTY_TOOL_TIP_TEXT, newValue);
+        setComponentProperty(PROPERTY_TOOL_TIP_TEXT, newValue);
     }
 
     /**
@@ -535,7 +535,7 @@
      * @param newValue the new scroll bar position
      */
     public void setVerticalScroll(Extent newValue) {
-        setProperty(PROPERTY_VERTICAL_SCROLL, newValue);
+        setComponentProperty(PROPERTY_VERTICAL_SCROLL, newValue);
     }
     
     /**
@@ -546,6 +546,6 @@
      * @param newValue the new width
      */
     public void setWidth(Extent newValue) {
-        setProperty(PROPERTY_WIDTH, newValue);
+        setComponentProperty(PROPERTY_WIDTH, newValue);
     }
 }
Index: src/server-java/app/nextapp/echo/app/Window.java
===================================================================
--- src/server-java/app/nextapp/echo/app/Window.java	(revision 1230)
+++ src/server-java/app/nextapp/echo/app/Window.java	(working copy)
@@ -66,7 +66,7 @@
      * @return the window title
      */
     public String getTitle() {
-        return (String) getProperty(PROPERTY_TITLE);
+        return (String) getComponentProperty(PROPERTY_TITLE);
     }
     
     /**
@@ -102,6 +102,6 @@
      * @param newValue the new window title
      */
     public void setTitle(String newValue) {
-        setProperty(PROPERTY_TITLE, newValue);
+        setComponentProperty(PROPERTY_TITLE, newValue);
     }
 }
Index: src/server-java/app/nextapp/echo/app/WindowPane.java
===================================================================
--- src/server-java/app/nextapp/echo/app/WindowPane.java	(revision 1230)
+++ src/server-java/app/nextapp/echo/app/WindowPane.java	(working copy)
@@ -170,7 +170,7 @@
      * @return the background image
      */
     public FillImage getBackgroundImage() {
-        return (FillImage) getProperty(PROPERTY_BACKGROUND_IMAGE);
+        return (FillImage) getComponentProperty(PROPERTY_BACKGROUND_IMAGE);
     }
     
     /**
@@ -179,7 +179,7 @@
      * @return border
      */
     public FillImageBorder getBorder() {
-        return (FillImageBorder) getProperty(PROPERTY_BORDER);
+        return (FillImageBorder) getComponentProperty(PROPERTY_BORDER);
     }
     
     /**
@@ -188,7 +188,7 @@
      * @return the icon
      */
     public ImageReference getCloseIcon() {
-        return (ImageReference) getProperty(PROPERTY_CLOSE_ICON);
+        return (ImageReference) getComponentProperty(PROPERTY_CLOSE_ICON);
     }
     
     /**
@@ -197,7 +197,7 @@
      * @return the inset margin
      */
     public Insets getCloseIconInsets() {
-        return (Insets) getProperty(PROPERTY_CLOSE_ICON_INSETS);
+        return (Insets) getComponentProperty(PROPERTY_CLOSE_ICON_INSETS);
     }
     
     /**
@@ -207,7 +207,7 @@
      * @return the inset margin
      */
     public Insets getControlsInsets() {
-        return (Insets) getProperty(PROPERTY_CONTROLS_INSETS);
+        return (Insets) getComponentProperty(PROPERTY_CONTROLS_INSETS);
     }
     
     /**
@@ -221,7 +221,7 @@
      *         </ul>
      */
     public int getDefaultCloseOperation() {
-        Integer defaultCloseOperationValue = (Integer) getProperty(PROPERTY_DEFAULT_CLOSE_OPERATION);
+        Integer defaultCloseOperationValue = (Integer) getComponentProperty(PROPERTY_DEFAULT_CLOSE_OPERATION);
         return defaultCloseOperationValue == null ? 0 : defaultCloseOperationValue.intValue();
     }
     
@@ -231,7 +231,7 @@
      * @return the height
      */
     public Extent getHeight() {
-        return (Extent) getProperty(PROPERTY_HEIGHT);
+        return (Extent) getComponentProperty(PROPERTY_HEIGHT);
     }
     
     /**
@@ -240,7 +240,7 @@
      * @return the icon
      */
     public ImageReference getIcon() {
-        return (ImageReference) getProperty(PROPERTY_ICON);
+        return (ImageReference) getComponentProperty(PROPERTY_ICON);
     }
     
     /**
@@ -249,7 +249,7 @@
      * @return the inset margin
      */
     public Insets getIconInsets() {
-        return (Insets) getProperty(PROPERTY_ICON_INSETS);
+        return (Insets) getComponentProperty(PROPERTY_ICON_INSETS);
     }
     
     /**
@@ -260,7 +260,7 @@
      * @return the inset
      */
     public Insets getInsets() {
-        return (Insets) getProperty(PROPERTY_INSETS);
+        return (Insets) getComponentProperty(PROPERTY_INSETS);
     }
     
     /**
@@ -269,7 +269,7 @@
      * @return the icon
      */
     public ImageReference getMaximizeIcon() {
-        return (ImageReference) getProperty(PROPERTY_MAXIMIZE_ICON);
+        return (ImageReference) getComponentProperty(PROPERTY_MAXIMIZE_ICON);
     }
     
     /**
@@ -278,7 +278,7 @@
      * @return the inset margin
      */
     public Insets getMaximizeIconInsets() {
-        return (Insets) getProperty(PROPERTY_MAXIMIZE_ICON_INSETS);
+        return (Insets) getComponentProperty(PROPERTY_MAXIMIZE_ICON_INSETS);
     }
     
     /**
@@ -288,7 +288,7 @@
      * @return the maximum height
      */
     public Extent getMaximumHeight() {
-        return (Extent) getProperty(PROPERTY_MAXIMUM_HEIGHT);
+        return (Extent) getComponentProperty(PROPERTY_MAXIMUM_HEIGHT);
     }
     
     /**
@@ -298,7 +298,7 @@
      * @return the maximum width
      */
     public Extent getMaximumWidth() {
-        return (Extent) getProperty(PROPERTY_MAXIMUM_WIDTH);
+        return (Extent) getComponentProperty(PROPERTY_MAXIMUM_WIDTH);
     }
     
     /**
@@ -307,7 +307,7 @@
      * @return the icon
      */
     public ImageReference getMinimizeIcon() {
-        return (ImageReference) getProperty(PROPERTY_MINIMIZE_ICON);
+        return (ImageReference) getComponentProperty(PROPERTY_MINIMIZE_ICON);
     }
     
     /**
@@ -316,7 +316,7 @@
      * @return the inset margin
      */
     public Insets getMinimizeIconInsets() {
-        return (Insets) getProperty(PROPERTY_MINIMIZE_ICON_INSETS);
+        return (Insets) getComponentProperty(PROPERTY_MINIMIZE_ICON_INSETS);
     }
     
     /**
@@ -326,7 +326,7 @@
      * @return the minimum height
      */
     public Extent getMinimumHeight() {
-        return (Extent) getProperty(PROPERTY_MINIMUM_HEIGHT);
+        return (Extent) getComponentProperty(PROPERTY_MINIMUM_HEIGHT);
     }
     
     /**
@@ -336,7 +336,7 @@
      * @return the minimum width
      */
     public Extent getMinimumWidth() {
-        return (Extent) getProperty(PROPERTY_MINIMUM_WIDTH);
+        return (Extent) getComponentProperty(PROPERTY_MINIMUM_WIDTH);
     }
     
     /**
@@ -346,7 +346,7 @@
      * @return the position
      */
     public Extent getPositionX() {
-        return (Extent) getProperty(PROPERTY_POSITION_X);
+        return (Extent) getComponentProperty(PROPERTY_POSITION_X);
     }
     
     /**
@@ -356,7 +356,7 @@
      * @return the position
      */
     public Extent getPositionY() {
-        return (Extent) getProperty(PROPERTY_POSITION_Y);
+        return (Extent) getComponentProperty(PROPERTY_POSITION_Y);
     }
     
     /**
@@ -365,7 +365,7 @@
      * @return the title
      */
     public String getTitle() {
-        return (String) getProperty(PROPERTY_TITLE);
+        return (String) getComponentProperty(PROPERTY_TITLE);
     }
     
     /**
@@ -374,7 +374,7 @@
      * @return the color
      */
     public Color getTitleBackground() {
-        return (Color) getProperty(PROPERTY_TITLE_BACKGROUND);
+        return (Color) getComponentProperty(PROPERTY_TITLE_BACKGROUND);
     }
     
     /**
@@ -383,7 +383,7 @@
      * @return the background image
      */
     public FillImage getTitleBackgroundImage() {
-        return (FillImage) getProperty(PROPERTY_TITLE_BACKGROUND_IMAGE);
+        return (FillImage) getComponentProperty(PROPERTY_TITLE_BACKGROUND_IMAGE);
     }
     
     /**
@@ -392,7 +392,7 @@
      * @return the font
      */
     public Font getTitleFont() {
-        return (Font) getProperty(PROPERTY_TITLE_FONT);
+        return (Font) getComponentProperty(PROPERTY_TITLE_FONT);
     }
     
     /**
@@ -401,7 +401,7 @@
      * @return the color
      */
     public Color getTitleForeground() {
-        return (Color) getProperty(PROPERTY_TITLE_FOREGROUND);
+        return (Color) getComponentProperty(PROPERTY_TITLE_FOREGROUND);
     }
     
     /**
@@ -410,7 +410,7 @@
      * @return the height
      */
     public Extent getTitleHeight() {
-        return (Extent) getProperty(PROPERTY_TITLE_HEIGHT);
+        return (Extent) getComponentProperty(PROPERTY_TITLE_HEIGHT);
     }
 
     /**
@@ -419,7 +419,7 @@
      * @return the insets
      */
     public Insets getTitleInsets() {
-        return (Insets) getProperty(PROPERTY_TITLE_INSETS);
+        return (Insets) getComponentProperty(PROPERTY_TITLE_INSETS);
     }
 
     /**
@@ -428,7 +428,7 @@
      * @return the width
      */
     public Extent getWidth() {
-        return (Extent) getProperty(PROPERTY_WIDTH);
+        return (Extent) getComponentProperty(PROPERTY_WIDTH);
     }
     
     /**
@@ -449,7 +449,7 @@
      * @return true if the window is closable
      */
     public boolean isClosable() {
-        Boolean value = (Boolean) getProperty(PROPERTY_CLOSABLE);
+        Boolean value = (Boolean) getComponentProperty(PROPERTY_CLOSABLE);
         return value == null ? true: value.booleanValue();
     }
     
@@ -460,7 +460,7 @@
      * @return true if the window can be maximized
      */
     public boolean isMaximizeEnabled() {
-        Boolean value = (Boolean) getProperty(PROPERTY_MAXIMIZE_ENABLED);
+        Boolean value = (Boolean) getComponentProperty(PROPERTY_MAXIMIZE_ENABLED);
         return value == null ? true: value.booleanValue();
     }
     
@@ -471,7 +471,7 @@
      * @return true if the window can be minimized
      */
     public boolean isMinimizeEnabled() {
-        Boolean value = (Boolean) getProperty(PROPERTY_MINIMIZE_ENABLED);
+        Boolean value = (Boolean) getComponentProperty(PROPERTY_MINIMIZE_ENABLED);
         return value == null ? true: value.booleanValue();
     }
     
@@ -488,7 +488,7 @@
      * @return true if the window is movable
      */
     public boolean isMovable() {
-        Boolean value = (Boolean) getProperty(PROPERTY_MOVABLE);
+        Boolean value = (Boolean) getComponentProperty(PROPERTY_MOVABLE);
         return value == null ? true : value.booleanValue();
     }
 
@@ -498,7 +498,7 @@
      * @return true if the window is resizable
      */
     public boolean isResizable() {
-        Boolean value = (Boolean) getProperty(PROPERTY_RESIZABLE);
+        Boolean value = (Boolean) getComponentProperty(PROPERTY_RESIZABLE);
         return value == null ? true : value.booleanValue(); 
     }
     
@@ -545,7 +545,7 @@
      * @param newValue the new background image
      */
     public void setBackgroundImage(FillImage newValue) {
-        setProperty(PROPERTY_BACKGROUND_IMAGE, newValue);
+        setComponentProperty(PROPERTY_BACKGROUND_IMAGE, newValue);
     }
     
     /**
@@ -554,7 +554,7 @@
      * @param newValue the new border
      */
     public void setBorder(FillImageBorder newValue) {
-        setProperty(PROPERTY_BORDER, newValue);
+        setComponentProperty(PROPERTY_BORDER, newValue);
     }
     
     /**
@@ -564,7 +564,7 @@
      * @param newValue true if the window is closable
      */
     public void setClosable(boolean newValue) {
-        setProperty(PROPERTY_CLOSABLE, new Boolean(newValue));
+        setComponentProperty(PROPERTY_CLOSABLE, new Boolean(newValue));
     }
     
     /**
@@ -573,7 +573,7 @@
      * @param newValue the new icon
      */
     public void setCloseIcon(ImageReference newValue) {
-        setProperty(PROPERTY_CLOSE_ICON, newValue);
+        setComponentProperty(PROPERTY_CLOSE_ICON, newValue);
     }
     
     /**
@@ -582,7 +582,7 @@
      * @param newValue the new inset margin
      */
     public void setCloseIconInsets(Insets newValue) {
-        setProperty(PROPERTY_CLOSE_ICON_INSETS, newValue);
+        setComponentProperty(PROPERTY_CLOSE_ICON_INSETS, newValue);
     }
     
     /**
@@ -592,7 +592,7 @@
      * @param newValue the new inset margin
      */
     public void setControlsInsets(Extent newValue) {
-        setProperty(PROPERTY_CONTROLS_INSETS, newValue);
+        setComponentProperty(PROPERTY_CONTROLS_INSETS, newValue);
     }
     
     /**
@@ -607,7 +607,7 @@
      *        </ul>
      */
     public void setDefaultCloseOperation(int newValue) {
-        setProperty(PROPERTY_DEFAULT_CLOSE_OPERATION, new Integer(newValue));
+        setComponentProperty(PROPERTY_DEFAULT_CLOSE_OPERATION, new Integer(newValue));
     }
     
     /**
@@ -617,7 +617,7 @@
      * @param newValue the new height
      */
     public void setHeight(Extent newValue) {
-        setProperty(PROPERTY_HEIGHT, newValue);
+        setComponentProperty(PROPERTY_HEIGHT, newValue);
     }
     
     /**
@@ -626,7 +626,7 @@
      * @param newValue the new icon
      */
     public void setIcon(ImageReference newValue) {
-        setProperty(PROPERTY_ICON, newValue);
+        setComponentProperty(PROPERTY_ICON, newValue);
     }
     
     /**
@@ -635,7 +635,7 @@
      * @param newValue the new inset margin
      */
     public void setIconInsets(Insets newValue) {
-        setProperty(PROPERTY_ICON_INSETS, newValue);
+        setComponentProperty(PROPERTY_ICON_INSETS, newValue);
     }
     
     /**
@@ -646,7 +646,7 @@
      * @param newValue the new inset
      */
     public void setInsets(Insets newValue) {
-        setProperty(PROPERTY_INSETS, newValue);
+        setComponentProperty(PROPERTY_INSETS, newValue);
     }
     
     /**
@@ -656,7 +656,7 @@
      * @param newValue true if the window can be maximized
      */
     public void setMaximizeEnabled(boolean newValue) {
-        setProperty(PROPERTY_MAXIMIZE_ENABLED, new Boolean(newValue));
+        setComponentProperty(PROPERTY_MAXIMIZE_ENABLED, new Boolean(newValue));
     }
     
     /**
@@ -665,7 +665,7 @@
      * @param newValue the new icon
      */
     public void setMaximizeIcon(ImageReference newValue) {
-        setProperty(PROPERTY_MAXIMIZE_ICON, newValue);
+        setComponentProperty(PROPERTY_MAXIMIZE_ICON, newValue);
     }
     
     /**
@@ -674,7 +674,7 @@
      * @param newValue the new inset margin
      */
     public void setMaximizeIconInsets(Insets newValue) {
-        setProperty(PROPERTY_MAXIMIZE_ICON_INSETS, newValue);
+        setComponentProperty(PROPERTY_MAXIMIZE_ICON_INSETS, newValue);
     }
     
     /**
@@ -686,7 +686,7 @@
      */
     public void setMaximumHeight(Extent newValue) {
         Extent.validate(newValue, Extent.PX);
-        setProperty(PROPERTY_MAXIMUM_HEIGHT, newValue);
+        setComponentProperty(PROPERTY_MAXIMUM_HEIGHT, newValue);
     }
     
     /**
@@ -698,7 +698,7 @@
      */
     public void setMaximumWidth(Extent newValue) {
         Extent.validate(newValue, Extent.PX);
-        setProperty(PROPERTY_MAXIMUM_WIDTH, newValue);
+        setComponentProperty(PROPERTY_MAXIMUM_WIDTH, newValue);
     }
     
     /**
@@ -708,7 +708,7 @@
      * @param newValue true if the window can be minimized
      */
     public void setMinimizeEnabled(boolean newValue) {
-        setProperty(PROPERTY_MINIMIZE_ENABLED, new Boolean(newValue));
+        setComponentProperty(PROPERTY_MINIMIZE_ENABLED, new Boolean(newValue));
     }
     
     /**
@@ -717,7 +717,7 @@
      * @param newValue the new icon
      */
     public void setMinimizeIcon(ImageReference newValue) {
-        setProperty(PROPERTY_MINIMIZE_ICON, newValue);
+        setComponentProperty(PROPERTY_MINIMIZE_ICON, newValue);
     }
     
     /**
@@ -726,7 +726,7 @@
      * @param newValue the new inset margin
      */
     public void setMinimizeIconInsets(Insets newValue) {
-        setProperty(PROPERTY_MINIMIZE_ICON_INSETS, newValue);
+        setComponentProperty(PROPERTY_MINIMIZE_ICON_INSETS, newValue);
     }
     
     /**
@@ -738,7 +738,7 @@
      */
     public void setMinimumHeight(Extent newValue) {
         Extent.validate(newValue, Extent.PX);
-        setProperty(PROPERTY_MINIMUM_HEIGHT, newValue);
+        setComponentProperty(PROPERTY_MINIMUM_HEIGHT, newValue);
     }
     
     /**
@@ -750,7 +750,7 @@
      */
     public void setMinimumWidth(Extent newValue) {
         Extent.validate(newValue, Extent.PX);
-        setProperty(PROPERTY_MINIMUM_WIDTH, newValue);
+        setComponentProperty(PROPERTY_MINIMUM_WIDTH, newValue);
     }
     
     /**
@@ -768,7 +768,7 @@
      * @param newValue true if the window may be moved by the user
      */
     public void setMovable(boolean newValue) {
-        setProperty(PROPERTY_MOVABLE, new Boolean(newValue));
+        setComponentProperty(PROPERTY_MOVABLE, new Boolean(newValue));
     }
     
     /**
@@ -778,7 +778,7 @@
      * @param newValue the new position
      */
     public void setPositionX(Extent newValue) {
-        setProperty(PROPERTY_POSITION_X, newValue);
+        setComponentProperty(PROPERTY_POSITION_X, newValue);
     }
     
     /**
@@ -788,7 +788,7 @@
      * @param newValue the new position
      */
     public void setPositionY(Extent newValue) {
-        setProperty(PROPERTY_POSITION_Y, newValue);
+        setComponentProperty(PROPERTY_POSITION_Y, newValue);
     }
 
     /**
@@ -797,7 +797,7 @@
      * @param newValue true if the window may be resized by the user
      */
     public void setResizable(boolean newValue) {
-        setProperty(PROPERTY_RESIZABLE, new Boolean(newValue));
+        setComponentProperty(PROPERTY_RESIZABLE, new Boolean(newValue));
     }
     
     /**
@@ -806,7 +806,7 @@
      * @param newValue the title
      */
     public void setTitle(String newValue) {
-        setProperty(PROPERTY_TITLE, newValue);
+        setComponentProperty(PROPERTY_TITLE, newValue);
     }
     
     /**
@@ -815,7 +815,7 @@
      * @param newValue the new font
      */
     public void setTitleFont(Font newValue) {
-        setProperty(PROPERTY_TITLE_FONT, newValue);
+        setComponentProperty(PROPERTY_TITLE_FONT, newValue);
     }
     
     /**
@@ -824,7 +824,7 @@
      * @param newValue the new color
      */
     public void setTitleBackground(Color newValue) {
-        setProperty(PROPERTY_TITLE_BACKGROUND, newValue);
+        setComponentProperty(PROPERTY_TITLE_BACKGROUND, newValue);
     }
     
     /**
@@ -833,7 +833,7 @@
      * @param newValue the new background image
      */
     public void setTitleBackgroundImage(FillImage newValue) {
-        setProperty(PROPERTY_TITLE_BACKGROUND_IMAGE, newValue);
+        setComponentProperty(PROPERTY_TITLE_BACKGROUND_IMAGE, newValue);
     }
     
     /**
@@ -842,7 +842,7 @@
      * @param newValue the new color
      */
     public void setTitleForeground(Color newValue) {
-        setProperty(PROPERTY_TITLE_FOREGROUND, newValue);
+        setComponentProperty(PROPERTY_TITLE_FOREGROUND, newValue);
     }
     
     /**
@@ -853,7 +853,7 @@
      */
     public void setTitleHeight(Extent newValue) {
         Extent.validate(newValue, Extent.PX);
-        setProperty(PROPERTY_TITLE_HEIGHT, newValue);
+        setComponentProperty(PROPERTY_TITLE_HEIGHT, newValue);
     }
     
     /**
@@ -862,7 +862,7 @@
      * @param newValue the new insets
      */
     public void setTitleInsets(Insets newValue) {
-        setProperty(PROPERTY_TITLE_INSETS, newValue);
+        setComponentProperty(PROPERTY_TITLE_INSETS, newValue);
     }
     
     /**
@@ -871,7 +871,7 @@
      * @param newValue the new width
      */
     public void setWidth(Extent newValue) {
-        setProperty(PROPERTY_WIDTH, newValue);
+        setComponentProperty(PROPERTY_WIDTH, newValue);
     }
     
     /**
Index: src/server-java/app/nextapp/echo/app/Grid.java
===================================================================
--- src/server-java/app/nextapp/echo/app/Grid.java	(revision 1230)
+++ src/server-java/app/nextapp/echo/app/Grid.java	(working copy)
@@ -96,7 +96,7 @@
      * @return the border
      */
     public Border getBorder() {
-        return (Border) getProperty(PROPERTY_BORDER);
+        return (Border) getComponentProperty(PROPERTY_BORDER);
     }
 
     /**
@@ -119,7 +119,7 @@
      * @return the height
      */
     public Extent getHeight() {
-        return (Extent) getProperty(PROPERTY_HEIGHT);
+        return (Extent) getComponentProperty(PROPERTY_HEIGHT);
     }
     
     /**
@@ -130,7 +130,7 @@
      * @return the default cell insets
      */
     public Insets getInsets() {
-        return (Insets) getProperty(PROPERTY_INSETS);
+        return (Insets) getComponentProperty(PROPERTY_INSETS);
     }
     
     /**
@@ -153,7 +153,7 @@
      * @see #setOrientation
      */
     public int getOrientation() {
-        Integer orientationValue = (Integer) getProperty(PROPERTY_ORIENTATION);
+        Integer orientationValue = (Integer) getComponentProperty(PROPERTY_ORIENTATION);
         return orientationValue == null ? ORIENTATION_HORIZONTAL : orientationValue.intValue();
     }
     
@@ -181,7 +181,7 @@
      * @return the number of columns or rows  
      */
     public int getSize() {
-        Integer sizeValue = (Integer) getProperty(PROPERTY_SIZE);
+        Integer sizeValue = (Integer) getComponentProperty(PROPERTY_SIZE);
         if (sizeValue == null) {
             return DEFAULT_SIZE;
         } else {
@@ -197,7 +197,7 @@
      * @return the width
      */
     public Extent getWidth() {
-        return (Extent) getProperty(PROPERTY_WIDTH);
+        return (Extent) getComponentProperty(PROPERTY_WIDTH);
     }
     
     /**
@@ -206,7 +206,7 @@
      * @param newValue the new border
      */
     public void setBorder(Border newValue) {
-        setProperty(PROPERTY_BORDER, newValue);
+        setComponentProperty(PROPERTY_BORDER, newValue);
     }
     
     /**
@@ -229,7 +229,7 @@
      * @param newValue the new height
      */
     public void setHeight(Extent newValue) {
-        setProperty(PROPERTY_HEIGHT, newValue);
+        setComponentProperty(PROPERTY_HEIGHT, newValue);
     }
     
     /**
@@ -240,7 +240,7 @@
      * @param newValue the new default cell insets
      */
     public void setInsets(Insets newValue) {
-        setProperty(PROPERTY_INSETS, newValue);
+        setComponentProperty(PROPERTY_INSETS, newValue);
     }
 
     /**
@@ -262,7 +262,7 @@
      *        </ul>
      */
     public void setOrientation(int newValue) {
-        setProperty(PROPERTY_ORIENTATION, new Integer(newValue));
+        setComponentProperty(PROPERTY_ORIENTATION, new Integer(newValue));
     }
     
     /**
@@ -290,7 +290,7 @@
      * @see #getSize()
      */
     public void setSize(int newValue) {
-        setProperty(PROPERTY_SIZE, new Integer(newValue));
+        setComponentProperty(PROPERTY_SIZE, new Integer(newValue));
     }
     
     /**
@@ -301,6 +301,6 @@
      * @param newValue the new width
      */
     public void setWidth(Extent newValue) {
-        setProperty(PROPERTY_WIDTH, newValue);
+        setComponentProperty(PROPERTY_WIDTH, newValue);
     }
 }
Index: src/server-java/app/nextapp/echo/app/Table.java
===================================================================
--- src/server-java/app/nextapp/echo/app/Table.java	(revision 1230)
+++ src/server-java/app/nextapp/echo/app/Table.java	(working copy)
@@ -229,7 +229,7 @@
      * @return the action command
      */
     public String getActionCommand() {
-        return (String) getProperty(PROPERTY_ACTION_COMMAND);
+        return (String) getComponentProperty(PROPERTY_ACTION_COMMAND);
     }
     
     /**
@@ -351,7 +351,7 @@
      * @return the border
      */
     public Border getBorder() {
-        return (Border) getProperty(PROPERTY_BORDER);
+        return (Border) getComponentProperty(PROPERTY_BORDER);
     }
 
     /** 
@@ -394,7 +394,7 @@
      * @return the default cell insets
      */
     public Insets getInsets() {
-        return (Insets) getProperty(PROPERTY_INSETS);
+        return (Insets) getComponentProperty(PROPERTY_INSETS);
     }
     
     /**
@@ -414,7 +414,7 @@
      * @return the color
      */
     public Color getRolloverBackground() {
-        return (Color) getProperty(PROPERTY_ROLLOVER_BACKGROUND);
+        return (Color) getComponentProperty(PROPERTY_ROLLOVER_BACKGROUND);
     }
 
     /**
@@ -424,7 +424,7 @@
      * @return the background image
      */
     public FillImage getRolloverBackgroundImage() {
-        return (FillImage) getProperty(PROPERTY_ROLLOVER_BACKGROUND_IMAGE);
+        return (FillImage) getComponentProperty(PROPERTY_ROLLOVER_BACKGROUND_IMAGE);
     }
 
     /**
@@ -434,7 +434,7 @@
      * @return the font
      */
     public Font getRolloverFont() {
-        return (Font) getProperty(PROPERTY_ROLLOVER_FONT);
+        return (Font) getComponentProperty(PROPERTY_ROLLOVER_FONT);
     }
 
     /**
@@ -444,7 +444,7 @@
      * @return the color
      */
     public Color getRolloverForeground() {
-        return (Color) getProperty(PROPERTY_ROLLOVER_FOREGROUND);
+        return (Color) getComponentProperty(PROPERTY_ROLLOVER_FOREGROUND);
     }
 
     /**
@@ -453,7 +453,7 @@
      * @return the background color
      */
     public Color getSelectionBackground() {
-        return (Color) getProperty(PROPERTY_SELECTION_BACKGROUND);
+        return (Color) getComponentProperty(PROPERTY_SELECTION_BACKGROUND);
     }
 
     /**
@@ -462,7 +462,7 @@
      * @return the background image
      */
     public FillImage getSelectionBackgroundImage() {
-        return (FillImage) getProperty(PROPERTY_SELECTION_BACKGROUND_IMAGE);
+        return (FillImage) getComponentProperty(PROPERTY_SELECTION_BACKGROUND_IMAGE);
     }
     
     /**
@@ -471,7 +471,7 @@
      * @return the font
      */
     public Font getSelectionFont() {
-        return (Font) getProperty(PROPERTY_SELECTION_FONT);
+        return (Font) getComponentProperty(PROPERTY_SELECTION_FONT);
     }
     
     /**
@@ -480,7 +480,7 @@
      * @return the foreground color
      */
     public Color getSelectionForeground() {
-        return (Color) getProperty(PROPERTY_SELECTION_FOREGROUND);
+        return (Color) getComponentProperty(PROPERTY_SELECTION_FOREGROUND);
     }
     
     /**
@@ -500,7 +500,7 @@
      * @return the width
      */
     public Extent getWidth() {
-        return (Extent) getProperty(PROPERTY_WIDTH);
+        return (Extent) getComponentProperty(PROPERTY_WIDTH);
     }
     
     /**
@@ -550,7 +550,7 @@
      * @see #setRolloverEnabled(boolean)
      */
     public boolean isRolloverEnabled() {
-        Boolean value = (Boolean) getProperty(PROPERTY_ROLLOVER_ENABLED);
+        Boolean value = (Boolean) getComponentProperty(PROPERTY_ROLLOVER_ENABLED);
         return value == null ? false : value.booleanValue();
     }
 
@@ -560,7 +560,7 @@
      * @return true if selection is enabled
      */
     public boolean isSelectionEnabled() {
-        Boolean value = (Boolean) getProperty(PROPERTY_SELECTION_ENABLED); 
+        Boolean value = (Boolean) getComponentProperty(PROPERTY_SELECTION_ENABLED); 
         return value == null ? false : value.booleanValue();
     }
     
@@ -601,7 +601,7 @@
      * @param newValue the new action command
      */
     public void setActionCommand(String newValue) {
-        setProperty(PROPERTY_ACTION_COMMAND, newValue);
+        setComponentProperty(PROPERTY_ACTION_COMMAND, newValue);
     }
     
     /**
@@ -630,7 +630,7 @@
      * @param newValue the new border
      */
     public void setBorder(Border newValue) {
-        setProperty(PROPERTY_BORDER, newValue);
+        setComponentProperty(PROPERTY_BORDER, newValue);
     }
     
     /** 
@@ -706,7 +706,7 @@
      * @param newValue the new default cell insets
      */
     public void setInsets(Insets newValue) {
-        setProperty(PROPERTY_INSETS, newValue);
+        setComponentProperty(PROPERTY_INSETS, newValue);
     }
     
     /**
@@ -742,7 +742,7 @@
      * @param newValue the new <code>Color</code>
      */
     public void setRolloverBackground(Color newValue) {
-        setProperty(PROPERTY_ROLLOVER_BACKGROUND, newValue);
+        setComponentProperty(PROPERTY_ROLLOVER_BACKGROUND, newValue);
     }
 
     /**
@@ -752,7 +752,7 @@
      * @param newValue the new background image
      */
     public void setRolloverBackgroundImage(FillImage newValue) {
-        setProperty(PROPERTY_ROLLOVER_BACKGROUND_IMAGE, newValue);
+        setComponentProperty(PROPERTY_ROLLOVER_BACKGROUND_IMAGE, newValue);
     }
 
     /**
@@ -763,7 +763,7 @@
      * @param newValue true if rollover effects should be enabled
      */
     public void setRolloverEnabled(boolean newValue) {
-        setProperty(PROPERTY_ROLLOVER_ENABLED, new Boolean(newValue));
+        setComponentProperty(PROPERTY_ROLLOVER_ENABLED, new Boolean(newValue));
     }
 
     /**
@@ -773,7 +773,7 @@
      * @param newValue the new <code>Font</code>
      */
     public void setRolloverFont(Font newValue) {
-        setProperty(PROPERTY_ROLLOVER_FONT, newValue);
+        setComponentProperty(PROPERTY_ROLLOVER_FONT, newValue);
     }
 
     /**
@@ -783,7 +783,7 @@
      * @param newValue the new <code>Color</code>
      */
     public void setRolloverForeground(Color newValue) {
-        setProperty(PROPERTY_ROLLOVER_FOREGROUND, newValue);
+        setComponentProperty(PROPERTY_ROLLOVER_FOREGROUND, newValue);
     }
 
     /**
@@ -810,7 +810,7 @@
      * @param newValue the new background color
      */
     public void setSelectionBackground(Color newValue) {
-        setProperty(PROPERTY_SELECTION_BACKGROUND, newValue);
+        setComponentProperty(PROPERTY_SELECTION_BACKGROUND, newValue);
     }
     
     /**
@@ -819,7 +819,7 @@
      * @param newValue the new background image
      */
     public void setSelectionBackgroundImage(FillImage newValue) {
-        setProperty(PROPERTY_SELECTION_BACKGROUND_IMAGE, newValue);
+        setComponentProperty(PROPERTY_SELECTION_BACKGROUND_IMAGE, newValue);
     }
     
     /**
@@ -828,7 +828,7 @@
      * @param newValue true to enable selection
      */
     public void setSelectionEnabled(boolean newValue) {
-        setProperty(PROPERTY_SELECTION_ENABLED, Boolean.valueOf(newValue));
+        setComponentProperty(PROPERTY_SELECTION_ENABLED, Boolean.valueOf(newValue));
     }
 
     /**
@@ -837,7 +837,7 @@
      * @param newValue the new foreground color
      */
     public void setSelectionForeground(Color newValue) {
-        setProperty(PROPERTY_SELECTION_FOREGROUND, newValue);
+        setComponentProperty(PROPERTY_SELECTION_FOREGROUND, newValue);
     }
     
     /**
@@ -846,7 +846,7 @@
      * @param newValue the new font
      */
     public void setSelectionFont(Font newValue) {
-        setProperty(PROPERTY_SELECTION_FONT, newValue);
+        setComponentProperty(PROPERTY_SELECTION_FONT, newValue);
     }
     
     /**
@@ -876,7 +876,7 @@
      * @param newValue the new width
      */
     public void setWidth(Extent newValue) {
-        setProperty(PROPERTY_WIDTH, newValue);
+        setComponentProperty(PROPERTY_WIDTH, newValue);
     }
     
     /**
Index: src/server-java/app/nextapp/echo/app/list/AbstractListComponent.java
===================================================================
--- src/server-java/app/nextapp/echo/app/list/AbstractListComponent.java	(revision 1230)
+++ src/server-java/app/nextapp/echo/app/list/AbstractListComponent.java	(working copy)
@@ -191,7 +191,7 @@
      * @return the action command
      */
     public String getActionCommand() {
-        return (String) getProperty(PROPERTY_ACTION_COMMAND);
+        return (String) getComponentProperty(PROPERTY_ACTION_COMMAND);
     }
     
     /**
@@ -200,7 +200,7 @@
      * @return the border
      */
     public Border getBorder() {
-        return (Border) getProperty(PROPERTY_BORDER);
+        return (Border) getComponentProperty(PROPERTY_BORDER);
     }
     
     /**
@@ -219,7 +219,7 @@
      * @return the color
      */
     public Color getDisabledBackground() {
-        return (Color) getProperty(PROPERTY_DISABLED_BACKGROUND);
+        return (Color) getComponentProperty(PROPERTY_DISABLED_BACKGROUND);
     }
 
     /**
@@ -229,7 +229,7 @@
      * @return the border
      */
     public Border getDisabledBorder() {
-        return (Border) getProperty(PROPERTY_DISABLED_BORDER);
+        return (Border) getComponentProperty(PROPERTY_DISABLED_BORDER);
     }
 
     /**
@@ -239,7 +239,7 @@
      * @return the font
      */
     public Font getDisabledFont() {
-        return (Font) getProperty(PROPERTY_DISABLED_FONT);
+        return (Font) getComponentProperty(PROPERTY_DISABLED_FONT);
     }
 
     /**
@@ -249,7 +249,7 @@
      * @return the color
      */
     public Color getDisabledForeground() {
-        return (Color) getProperty(PROPERTY_DISABLED_FOREGROUND);
+        return (Color) getComponentProperty(PROPERTY_DISABLED_FOREGROUND);
     }
 
     /**
@@ -260,7 +260,7 @@
      * @return the height
      */
     public Extent getHeight() {
-        return (Extent) getProperty(PROPERTY_HEIGHT);
+        return (Extent) getComponentProperty(PROPERTY_HEIGHT);
     }
     
     /**
@@ -269,7 +269,7 @@
      * @return the inset margin
      */
     public Insets getInsets() {
-        return (Insets) getProperty(PROPERTY_INSETS);
+        return (Insets) getComponentProperty(PROPERTY_INSETS);
     }
     
     /**
@@ -287,7 +287,7 @@
      * @return the rollover background
      */
     public Color getRolloverBackground() {
-        return (Color) getProperty(PROPERTY_ROLLOVER_BACKGROUND);
+        return (Color) getComponentProperty(PROPERTY_ROLLOVER_BACKGROUND);
     }
     
     /**
@@ -296,7 +296,7 @@
      * @return the rollover font
      */
     public Font getRolloverFont() {
-        return (Font) getProperty(PROPERTY_ROLLOVER_FONT);
+        return (Font) getComponentProperty(PROPERTY_ROLLOVER_FONT);
     }
     
     /**
@@ -305,7 +305,7 @@
      * @return the rollover foreground
      */
     public Color getRolloverForeground() {
-        return (Color) getProperty(PROPERTY_ROLLOVER_FOREGROUND);
+        return (Color) getComponentProperty(PROPERTY_ROLLOVER_FOREGROUND);
     }
     
     /**
@@ -324,7 +324,7 @@
      * @return the tool tip text
      */
     public String getToolTipText() {
-        return (String) getProperty(PROPERTY_TOOL_TIP_TEXT);
+        return (String) getComponentProperty(PROPERTY_TOOL_TIP_TEXT);
     }
     
     /**
@@ -335,7 +335,7 @@
      * @return the width
      */
     public Extent getWidth() {
-        return (Extent) getProperty(PROPERTY_WIDTH);
+        return (Extent) getComponentProperty(PROPERTY_WIDTH);
     }
     
     /**
@@ -353,7 +353,7 @@
      * @return true if rollover effects are enabled
      */
     public boolean isRolloverEnabled() {
-        Boolean value = (Boolean) getProperty(PROPERTY_ROLLOVER_ENABLED);
+        Boolean value = (Boolean) getComponentProperty(PROPERTY_ROLLOVER_ENABLED);
         return value == null ? false : value.booleanValue();
     }
 
@@ -407,7 +407,7 @@
      * @param newValue the new action command
      */
     public void setActionCommand(String newValue) {
-        setProperty(PROPERTY_ACTION_COMMAND, newValue);
+        setComponentProperty(PROPERTY_ACTION_COMMAND, newValue);
     }
     
     /**
@@ -416,7 +416,7 @@
      * @param newValue the new <code>Border</code>
      */
     public void setBorder(Border newValue) {
-        setProperty(PROPERTY_BORDER, newValue);
+        setComponentProperty(PROPERTY_BORDER, newValue);
     }
     
     /**
@@ -441,7 +441,7 @@
      * @param newValue the new <code>Color</code>
      */
     public void setDisabledBackground(Color newValue) {
-        setProperty(PROPERTY_DISABLED_BACKGROUND, newValue);
+        setComponentProperty(PROPERTY_DISABLED_BACKGROUND, newValue);
     }
 
     /**
@@ -450,7 +450,7 @@
      * @param newValue the new border
      */
     public void setDisabledBorder(Border newValue) {
-        setProperty(PROPERTY_DISABLED_BORDER, newValue);
+        setComponentProperty(PROPERTY_DISABLED_BORDER, newValue);
     }
 
     /**
@@ -459,7 +459,7 @@
      * @param newValue the new <code>Font</code>
      */
     public void setDisabledFont(Font newValue) {
-        setProperty(PROPERTY_DISABLED_FONT, newValue);
+        setComponentProperty(PROPERTY_DISABLED_FONT, newValue);
     }
 
     /**
@@ -468,7 +468,7 @@
      * @param newValue the new <code>Color</code>
      */
     public void setDisabledForeground(Color newValue) {
-        setProperty(PROPERTY_DISABLED_FOREGROUND, newValue);
+        setComponentProperty(PROPERTY_DISABLED_FOREGROUND, newValue);
     }
 
     /**
@@ -479,7 +479,7 @@
      * @param newValue the new height
      */
     public void setHeight(Extent newValue) {
-        setProperty(PROPERTY_HEIGHT, newValue);
+        setComponentProperty(PROPERTY_HEIGHT, newValue);
     }
     
     /**
@@ -488,7 +488,7 @@
      * @param newValue the new inset margin
      */
     public void setInsets(Insets newValue) {
-        setProperty(PROPERTY_INSETS, newValue);
+        setComponentProperty(PROPERTY_INSETS, newValue);
     }
     
     /**
@@ -516,7 +516,7 @@
      * @param newValue the new rollover background
      */
     public void setRolloverBackground(Color newValue) {
-        setProperty(PROPERTY_ROLLOVER_BACKGROUND, newValue);
+        setComponentProperty(PROPERTY_ROLLOVER_BACKGROUND, newValue);
     }
     
     /**
@@ -525,7 +525,7 @@
      * @param newValue the new rollover enabled state
      */
     public void setRolloverEnabled(boolean newValue) {
-        setProperty(PROPERTY_ROLLOVER_ENABLED, new Boolean(newValue));
+        setComponentProperty(PROPERTY_ROLLOVER_ENABLED, new Boolean(newValue));
     }
     
     /**
@@ -534,7 +534,7 @@
      * @param newValue the new rollover font
      */
     public void setRolloverFont(Font newValue) {
-        setProperty(PROPERTY_ROLLOVER_FONT, newValue);
+        setComponentProperty(PROPERTY_ROLLOVER_FONT, newValue);
     }
     
     /**
@@ -543,7 +543,7 @@
      * @param newValue the new rollover foreground
      */
     public void setRolloverForeground(Color newValue) {
-        setProperty(PROPERTY_ROLLOVER_FOREGROUND, newValue);
+        setComponentProperty(PROPERTY_ROLLOVER_FOREGROUND, newValue);
     }
     
     /**
@@ -572,7 +572,7 @@
      * @param newValue the new tool tip text
      */
     public void setToolTipText(String newValue) {
-        setProperty(PROPERTY_TOOL_TIP_TEXT, newValue);
+        setComponentProperty(PROPERTY_TOOL_TIP_TEXT, newValue);
     }
 
     /**
@@ -583,6 +583,6 @@
      * @param newValue the new width 
      */
     public void setWidth(Extent newValue) {
-        setProperty(PROPERTY_WIDTH, newValue);
+        setComponentProperty(PROPERTY_WIDTH, newValue);
     }
 }
Index: src/server-java/app/nextapp/echo/app/Row.java
===================================================================
--- src/server-java/app/nextapp/echo/app/Row.java	(revision 1230)
+++ src/server-java/app/nextapp/echo/app/Row.java	(working copy)
@@ -63,7 +63,7 @@
      * @return the alignment
      */
     public Alignment getAlignment() {
-        return (Alignment) getProperty(PROPERTY_ALIGNMENT);
+        return (Alignment) getComponentProperty(PROPERTY_ALIGNMENT);
     }
 
     /**
@@ -72,7 +72,7 @@
      * @return the border
      */
     public Border getBorder() {
-        return (Border) getProperty(PROPERTY_BORDER);
+        return (Border) getComponentProperty(PROPERTY_BORDER);
     }
     
     /**
@@ -83,7 +83,7 @@
      * @return the cell spacing
      */
     public Extent getCellSpacing() {
-        return (Extent) getProperty(PROPERTY_CELL_SPACING);
+        return (Extent) getComponentProperty(PROPERTY_CELL_SPACING);
     }
     
     /**
@@ -92,7 +92,7 @@
      * @return the inset
      */
     public Insets getInsets() {
-        return (Insets) getProperty(PROPERTY_INSETS);
+        return (Insets) getComponentProperty(PROPERTY_INSETS);
     }
 
     /**
@@ -102,7 +102,7 @@
      * @param newValue the new alignment
      */
     public void setAlignment(Alignment newValue) {
-        setProperty(PROPERTY_ALIGNMENT, newValue);
+        setComponentProperty(PROPERTY_ALIGNMENT, newValue);
     }
     
     /**
@@ -111,7 +111,7 @@
      * @param newValue the new border
      */
     public void setBorder(Border newValue) {
-        setProperty(PROPERTY_BORDER, newValue);
+        setComponentProperty(PROPERTY_BORDER, newValue);
     }
     
     /**
@@ -122,7 +122,7 @@
      * @param newValue the new spacing
      */
     public void setCellSpacing(Extent newValue) {
-        setProperty(PROPERTY_CELL_SPACING, newValue);
+        setComponentProperty(PROPERTY_CELL_SPACING, newValue);
     }
     
     /**
@@ -131,6 +131,6 @@
      * @param newValue the new inset
      */
     public void setInsets(Insets newValue) {
-        setProperty(PROPERTY_INSETS, newValue);
+        setComponentProperty(PROPERTY_INSETS, newValue);
     }
 }
Index: src/server-java/app/nextapp/echo/app/ContentPane.java
===================================================================
--- src/server-java/app/nextapp/echo/app/ContentPane.java	(revision 1230)
+++ src/server-java/app/nextapp/echo/app/ContentPane.java	(working copy)
@@ -72,7 +72,7 @@
      * @return the background image
      */
     public FillImage getBackgroundImage() {
-        return (FillImage) getProperty(PROPERTY_BACKGROUND_IMAGE);
+        return (FillImage) getComponentProperty(PROPERTY_BACKGROUND_IMAGE);
     }
     
     /**
@@ -81,7 +81,7 @@
      * @return the horizontal scrollbar position
      */
     public Extent getHorizontalScroll() {
-        return (Extent) getProperty(PROPERTY_HORIZONTAL_SCROLL);
+        return (Extent) getComponentProperty(PROPERTY_HORIZONTAL_SCROLL);
     }
     
     /**
@@ -96,7 +96,7 @@
      *         </ul>
      */
     public int getOverflow() {
-        Integer overflow = (Integer) getProperty(PROPERTY_OVERFLOW); 
+        Integer overflow = (Integer) getComponentProperty(PROPERTY_OVERFLOW); 
         return overflow == null ? OVERFLOW_AUTO : overflow.intValue();
     }
 
@@ -110,7 +110,7 @@
      * @return newValue the inset margin
      */
     public Insets getInsets() {
-        return (Insets) getProperty(PROPERTY_INSETS);
+        return (Insets) getComponentProperty(PROPERTY_INSETS);
     }
     
     /**
@@ -119,7 +119,7 @@
      * @return the vertical scrollbar position
      */
     public Extent getVerticalScroll() {
-        return (Extent) getProperty(PROPERTY_VERTICAL_SCROLL);
+        return (Extent) getComponentProperty(PROPERTY_VERTICAL_SCROLL);
     }
 
     /**
@@ -166,7 +166,7 @@
      * @param newValue the new background image
      */
     public void setBackgroundImage(FillImage newValue) {
-        setProperty(PROPERTY_BACKGROUND_IMAGE, newValue);
+        setComponentProperty(PROPERTY_BACKGROUND_IMAGE, newValue);
     }
 
     /**
@@ -178,7 +178,7 @@
      * @param newValue the new horizontal scrollbar position
      */
     public void setHorizontalScroll(Extent newValue) {
-        setProperty(PROPERTY_HORIZONTAL_SCROLL, newValue);
+        setComponentProperty(PROPERTY_HORIZONTAL_SCROLL, newValue);
     }
     
     /**
@@ -191,7 +191,7 @@
      * @param newValue the new inset margin
      */
     public void setInsets(Insets newValue) {
-        setProperty(PROPERTY_INSETS, newValue);
+        setComponentProperty(PROPERTY_INSETS, newValue);
     }
 
     /**
@@ -206,7 +206,7 @@
      *        </ul>
      */
     public void setOverflow(int newValue) {
-        setProperty(PROPERTY_OVERFLOW, new Integer(newValue));
+        setComponentProperty(PROPERTY_OVERFLOW, new Integer(newValue));
     }
 
     /**
@@ -219,8 +219,8 @@
      */
     public void setVerticalScroll(Extent newValue) {
         if (SCROLL_BOTTOM.equals(newValue)) {
-            setProperty(PROPERTY_VERTICAL_SCROLL, PX_0);
+            setComponentProperty(PROPERTY_VERTICAL_SCROLL, PX_0);
         }
-        setProperty(PROPERTY_VERTICAL_SCROLL, newValue);
+        setComponentProperty(PROPERTY_VERTICAL_SCROLL, newValue);
     }
 }
Index: src/server-java/app/nextapp/echo/app/Label.java
===================================================================
--- src/server-java/app/nextapp/echo/app/Label.java	(revision 1230)
+++ src/server-java/app/nextapp/echo/app/Label.java	(working copy)
@@ -90,7 +90,7 @@
      * @return the icon
      */
     public ImageReference getIcon() {
-        return (ImageReference) getProperty(PROPERTY_ICON);
+        return (ImageReference) getComponentProperty(PROPERTY_ICON);
     }
     
     /**
@@ -101,7 +101,7 @@
      * @return the margin size 
      */
     public Extent getIconTextMargin() {
-        return (Extent) getProperty(PROPERTY_ICON_TEXT_MARGIN);
+        return (Extent) getComponentProperty(PROPERTY_ICON_TEXT_MARGIN);
     }
     
     /**
@@ -110,7 +110,7 @@
      * @return the text
      */
     public String getText() {
-        return (String) getProperty(PROPERTY_TEXT);
+        return (String) getComponentProperty(PROPERTY_TEXT);
     }
 
     /**
@@ -119,7 +119,7 @@
      * @return the text alignment
      */
     public Alignment getTextAlignment() {
-        return (Alignment) getProperty(PROPERTY_TEXT_ALIGNMENT);
+        return (Alignment) getComponentProperty(PROPERTY_TEXT_ALIGNMENT);
     }
 
     /**
@@ -128,7 +128,7 @@
      * @return the text position
      */
     public Alignment getTextPosition() {
-        return (Alignment) getProperty(PROPERTY_TEXT_POSITION);
+        return (Alignment) getComponentProperty(PROPERTY_TEXT_POSITION);
     }
 
     /**
@@ -138,7 +138,7 @@
      * @return the tool tip text
      */
     public String getToolTipText() {
-        return (String) getProperty(PROPERTY_TOOL_TIP_TEXT);
+        return (String) getComponentProperty(PROPERTY_TOOL_TIP_TEXT);
     }
     
     /**
@@ -148,7 +148,7 @@
      * @return the format whitespace state
      */
     public boolean isFormatWhitespace() {
-        Boolean value = (Boolean) getProperty(PROPERTY_FORMAT_WHITESPACE);
+        Boolean value = (Boolean) getComponentProperty(PROPERTY_FORMAT_WHITESPACE);
         return value == null ? false : value.booleanValue();
     }
     
@@ -159,7 +159,7 @@
      * @return the line wrap state
      */
     public boolean isLineWrap() {
-        Boolean value = (Boolean) getProperty(PROPERTY_LINE_WRAP);
+        Boolean value = (Boolean) getComponentProperty(PROPERTY_LINE_WRAP);
         return value == null ? true : value.booleanValue();
     }
     
@@ -179,7 +179,7 @@
      * @param newValue the new format whitespace state
      */
     public void setFormatWhitespace(boolean newValue) {
-        setProperty(PROPERTY_FORMAT_WHITESPACE, newValue ? Boolean.TRUE : Boolean.FALSE);
+        setComponentProperty(PROPERTY_FORMAT_WHITESPACE, newValue ? Boolean.TRUE : Boolean.FALSE);
     }
     
     /**
@@ -188,7 +188,7 @@
      * @param newValue the icon to be displayed
      */
     public void setIcon(ImageReference newValue) {
-        setProperty(PROPERTY_ICON, newValue);
+        setComponentProperty(PROPERTY_ICON, newValue);
     }
     
     /**
@@ -199,7 +199,7 @@
      * @param newValue the margin size 
      */
     public void setIconTextMargin(Extent newValue) {
-        setProperty(PROPERTY_ICON_TEXT_MARGIN, newValue);
+        setComponentProperty(PROPERTY_ICON_TEXT_MARGIN, newValue);
     }
     
     /**
@@ -209,7 +209,7 @@
      * @param newValue the new line wrap state
      */
     public void setLineWrap(boolean newValue) {
-        setProperty(PROPERTY_LINE_WRAP, new Boolean(newValue));
+        setComponentProperty(PROPERTY_LINE_WRAP, new Boolean(newValue));
     }
     
     /**
@@ -218,7 +218,7 @@
      * @param newValue the text to be displayed
      */
     public void setText(String newValue) {
-        setProperty(PROPERTY_TEXT, newValue);
+        setComponentProperty(PROPERTY_TEXT, newValue);
     }
     
     /**
@@ -229,7 +229,7 @@
      * @param newValue the new text position
      */
     public void setTextAlignment(Alignment newValue) {
-        setProperty(PROPERTY_TEXT_ALIGNMENT, newValue);
+        setComponentProperty(PROPERTY_TEXT_ALIGNMENT, newValue);
     }
     
     /**
@@ -240,7 +240,7 @@
      * @param newValue the new text position
      */
     public void setTextPosition(Alignment newValue) {
-        setProperty(PROPERTY_TEXT_POSITION, newValue);
+        setComponentProperty(PROPERTY_TEXT_POSITION, newValue);
     }
 
     /**
@@ -250,6 +250,6 @@
      * @param newValue the new tool tip text
      */
     public void setToolTipText(String newValue) {
-        setProperty(PROPERTY_TOOL_TIP_TEXT, newValue);
+        setComponentProperty(PROPERTY_TOOL_TIP_TEXT, newValue);
     }
 }
Index: src/server-java/app/nextapp/echo/app/button/AbstractButton.java
===================================================================
--- src/server-java/app/nextapp/echo/app/button/AbstractButton.java	(revision 1230)
+++ src/server-java/app/nextapp/echo/app/button/AbstractButton.java	(working copy)
@@ -167,7 +167,7 @@
      * @return the alignment
      */
     public Alignment getAlignment() {
-        return (Alignment) getProperty(PROPERTY_ALIGNMENT);
+        return (Alignment) getComponentProperty(PROPERTY_ALIGNMENT);
     }
 
     /**
@@ -176,7 +176,7 @@
      * @return the background image
      */
     public FillImage getBackgroundImage() {
-        return (FillImage) getProperty(PROPERTY_BACKGROUND_IMAGE);
+        return (FillImage) getComponentProperty(PROPERTY_BACKGROUND_IMAGE);
     }
 
     /**
@@ -185,7 +185,7 @@
      * @return the border
      */
     public Border getBorder() {
-        return (Border) getProperty(PROPERTY_BORDER);
+        return (Border) getComponentProperty(PROPERTY_BORDER);
     }
     
     /**
@@ -194,7 +194,7 @@
      * @return the color
      */
     public Color getDisabledBackground() {
-        return (Color) getProperty(PROPERTY_DISABLED_BACKGROUND);
+        return (Color) getComponentProperty(PROPERTY_DISABLED_BACKGROUND);
     }
 
     /**
@@ -203,7 +203,7 @@
      * @return the background image
      */
     public FillImage getDisabledBackgroundImage() {
-        return (FillImage) getProperty(PROPERTY_DISABLED_BACKGROUND_IMAGE);
+        return (FillImage) getComponentProperty(PROPERTY_DISABLED_BACKGROUND_IMAGE);
     }
 
     /**
@@ -213,7 +213,7 @@
      * @return the border
      */
     public Border getDisabledBorder() {
-        return (Border) getProperty(PROPERTY_DISABLED_BORDER);
+        return (Border) getComponentProperty(PROPERTY_DISABLED_BORDER);
     }
 
     /**
@@ -222,7 +222,7 @@
      * @return the font
      */
     public Font getDisabledFont() {
-        return (Font) getProperty(PROPERTY_DISABLED_FONT);
+        return (Font) getComponentProperty(PROPERTY_DISABLED_FONT);
     }
 
     /**
@@ -231,7 +231,7 @@
      * @return the color
      */
     public Color getDisabledForeground() {
-        return (Color) getProperty(PROPERTY_DISABLED_FOREGROUND);
+        return (Color) getComponentProperty(PROPERTY_DISABLED_FOREGROUND);
     }
 
     /**
@@ -241,7 +241,7 @@
      * @return the icon
      */
     public ImageReference getDisabledIcon() {
-        return (ImageReference) getProperty(PROPERTY_DISABLED_ICON);
+        return (ImageReference) getComponentProperty(PROPERTY_DISABLED_ICON);
     }
 
     /**
@@ -250,7 +250,7 @@
      * @return the color
      */
     public Color getFocusedBackground() {
-        return (Color) getProperty(PROPERTY_FOCUSED_BACKGROUND);
+        return (Color) getComponentProperty(PROPERTY_FOCUSED_BACKGROUND);
     }
 
     /**
@@ -259,7 +259,7 @@
      * @return the background image
      */
     public FillImage getFocusedBackgroundImage() {
-        return (FillImage) getProperty(PROPERTY_FOCUSED_BACKGROUND_IMAGE);
+        return (FillImage) getComponentProperty(PROPERTY_FOCUSED_BACKGROUND_IMAGE);
     }
 
     /**
@@ -269,7 +269,7 @@
      * @return the border
      */
     public Border getFocusedBorder() {
-        return (Border) getProperty(PROPERTY_FOCUSED_BORDER);
+        return (Border) getComponentProperty(PROPERTY_FOCUSED_BORDER);
     }
 
     /**
@@ -278,7 +278,7 @@
      * @return the font
      */
     public Font getFocusedFont() {
-        return (Font) getProperty(PROPERTY_FOCUSED_FONT);
+        return (Font) getComponentProperty(PROPERTY_FOCUSED_FONT);
     }
 
     /**
@@ -287,7 +287,7 @@
      * @return the color
      */
     public Color getFocusedForeground() {
-        return (Color) getProperty(PROPERTY_FOCUSED_FOREGROUND);
+        return (Color) getComponentProperty(PROPERTY_FOCUSED_FOREGROUND);
     }
 
     /**
@@ -297,7 +297,7 @@
      * @return the icon
      */
     public ImageReference getFocusedIcon() {
-        return (ImageReference) getProperty(PROPERTY_FOCUSED_ICON);
+        return (ImageReference) getComponentProperty(PROPERTY_FOCUSED_ICON);
     }
 
     /**
@@ -308,7 +308,7 @@
      * @return the height
      */
     public Extent getHeight() {
-        return (Extent) getProperty(PROPERTY_HEIGHT);
+        return (Extent) getComponentProperty(PROPERTY_HEIGHT);
     }
 
     /**
@@ -317,7 +317,7 @@
      * @return the icon
      */
     public ImageReference getIcon() {
-        return (ImageReference) getProperty(PROPERTY_ICON);
+        return (ImageReference) getComponentProperty(PROPERTY_ICON);
     }
 
     /**
@@ -330,7 +330,7 @@
      * @return the margin size 
      */
     public Extent getIconTextMargin() {
-        return (Extent) getProperty(PROPERTY_ICON_TEXT_MARGIN);
+        return (Extent) getComponentProperty(PROPERTY_ICON_TEXT_MARGIN);
     }
     
     /**
@@ -339,7 +339,7 @@
      * @return the margin
      */
     public Insets getInsets() {
-        return (Insets) getProperty(PROPERTY_INSETS);
+        return (Insets) getComponentProperty(PROPERTY_INSETS);
     }
 
     /**
@@ -348,7 +348,7 @@
      * @return the model
      */
     public ButtonModel getModel() {
-        return (ButtonModel) getProperty(PROPERTY_MODEL);
+        return (ButtonModel) getComponentProperty(PROPERTY_MODEL);
     }
 
     /**
@@ -357,7 +357,7 @@
      * @return the color
      */
     public Color getPressedBackground() {
-        return (Color) getProperty(PROPERTY_PRESSED_BACKGROUND);
+        return (Color) getComponentProperty(PROPERTY_PRESSED_BACKGROUND);
     }
 
     /**
@@ -366,7 +366,7 @@
      * @return the background image
      */
     public FillImage getPressedBackgroundImage() {
-        return (FillImage) getProperty(PROPERTY_PRESSED_BACKGROUND_IMAGE);
+        return (FillImage) getComponentProperty(PROPERTY_PRESSED_BACKGROUND_IMAGE);
     }
 
     /**
@@ -376,7 +376,7 @@
      * @return the border
      */
     public Border getPressedBorder() {
-        return (Border) getProperty(PROPERTY_PRESSED_BORDER);
+        return (Border) getComponentProperty(PROPERTY_PRESSED_BORDER);
     }
 
     /**
@@ -385,7 +385,7 @@
      * @return the font
      */
     public Font getPressedFont() {
-        return (Font) getProperty(PROPERTY_PRESSED_FONT);
+        return (Font) getComponentProperty(PROPERTY_PRESSED_FONT);
     }
 
     /**
@@ -394,7 +394,7 @@
      * @return the color
      */
     public Color getPressedForeground() {
-        return (Color) getProperty(PROPERTY_PRESSED_FOREGROUND);
+        return (Color) getComponentProperty(PROPERTY_PRESSED_FOREGROUND);
     }
 
     /**
@@ -404,7 +404,7 @@
      * @return the icon
      */
     public ImageReference getPressedIcon() {
-        return (ImageReference) getProperty(PROPERTY_PRESSED_ICON);
+        return (ImageReference) getComponentProperty(PROPERTY_PRESSED_ICON);
     }
 
     /**
@@ -414,7 +414,7 @@
      * @return the color
      */
     public Color getRolloverBackground() {
-        return (Color) getProperty(PROPERTY_ROLLOVER_BACKGROUND);
+        return (Color) getComponentProperty(PROPERTY_ROLLOVER_BACKGROUND);
     }
 
     /**
@@ -424,7 +424,7 @@
      * @return the background image
      */
     public FillImage getRolloverBackgroundImage() {
-        return (FillImage) getProperty(PROPERTY_ROLLOVER_BACKGROUND_IMAGE);
+        return (FillImage) getComponentProperty(PROPERTY_ROLLOVER_BACKGROUND_IMAGE);
     }
 
     /**
@@ -434,7 +434,7 @@
      * @return the border
      */
     public Border getRolloverBorder() {
-        return (Border) getProperty(PROPERTY_ROLLOVER_BORDER);
+        return (Border) getComponentProperty(PROPERTY_ROLLOVER_BORDER);
     }
 
     /**
@@ -444,7 +444,7 @@
      * @return the font
      */
     public Font getRolloverFont() {
-        return (Font) getProperty(PROPERTY_ROLLOVER_FONT);
+        return (Font) getComponentProperty(PROPERTY_ROLLOVER_FONT);
     }
 
     /**
@@ -454,7 +454,7 @@
      * @return the color
      */
     public Color getRolloverForeground() {
-        return (Color) getProperty(PROPERTY_ROLLOVER_FOREGROUND);
+        return (Color) getComponentProperty(PROPERTY_ROLLOVER_FOREGROUND);
     }
 
     /**
@@ -464,7 +464,7 @@
      * @return the icon
      */
     public ImageReference getRolloverIcon() {
-        return (ImageReference) getProperty(PROPERTY_ROLLOVER_ICON);
+        return (ImageReference) getComponentProperty(PROPERTY_ROLLOVER_ICON);
     }
 
     /**
@@ -473,7 +473,7 @@
      * @return the text label
      */
     public String getText() {
-        return (String) getProperty(PROPERTY_TEXT);
+        return (String) getComponentProperty(PROPERTY_TEXT);
     }
 
     /**
@@ -482,7 +482,7 @@
      * @return the text alignment
      */
     public Alignment getTextAlignment() {
-        return (Alignment) getProperty(PROPERTY_TEXT_ALIGNMENT);
+        return (Alignment) getComponentProperty(PROPERTY_TEXT_ALIGNMENT);
     }
 
     /**
@@ -491,7 +491,7 @@
      * @return the text position
      */
     public Alignment getTextPosition() {
-        return (Alignment) getProperty(PROPERTY_TEXT_POSITION);
+        return (Alignment) getComponentProperty(PROPERTY_TEXT_POSITION);
     }
     
     /**
@@ -501,7 +501,7 @@
      * @return the tool tip text
      */
     public String getToolTipText() {
-        return (String) getProperty(PROPERTY_TOOL_TIP_TEXT);
+        return (String) getComponentProperty(PROPERTY_TOOL_TIP_TEXT);
     }
     
     /**
@@ -512,7 +512,7 @@
      * @return the width
      */
     public Extent getWidth() {
-        return (Extent) getProperty(PROPERTY_WIDTH);
+        return (Extent) getComponentProperty(PROPERTY_WIDTH);
     }
 
     /**
@@ -532,7 +532,7 @@
      * @see #setFocusedEnabled(boolean)
      */
     public boolean isFocusedEnabled() {
-        Boolean value = (Boolean) getProperty(PROPERTY_PRESSED_ENABLED);
+        Boolean value = (Boolean) getComponentProperty(PROPERTY_PRESSED_ENABLED);
         return value == null ? false : value.booleanValue();
     }
 
@@ -543,7 +543,7 @@
      * @return the line wrap state
      */
     public boolean isLineWrap() {
-        Boolean value = (Boolean) getProperty(PROPERTY_LINE_WRAP);
+        Boolean value = (Boolean) getComponentProperty(PROPERTY_LINE_WRAP);
         return value == null ? true : value.booleanValue();
     }
     
@@ -554,7 +554,7 @@
      * @see #setPressedEnabled(boolean)
      */
     public boolean isPressedEnabled() {
-        Boolean value = (Boolean) getProperty(PROPERTY_PRESSED_ENABLED);
+        Boolean value = (Boolean) getComponentProperty(PROPERTY_PRESSED_ENABLED);
         return value == null ? false : value.booleanValue();
     }
 
@@ -565,7 +565,7 @@
      * @see #setRolloverEnabled(boolean)
      */
     public boolean isRolloverEnabled() {
-        Boolean value = (Boolean) getProperty(PROPERTY_ROLLOVER_ENABLED);
+        Boolean value = (Boolean) getComponentProperty(PROPERTY_ROLLOVER_ENABLED);
         return value == null ? false : value.booleanValue();
     }
 
@@ -621,7 +621,7 @@
      * @param newValue the new alignment
      */
     public void setAlignment(Alignment newValue) {
-        setProperty(PROPERTY_ALIGNMENT, newValue);
+        setComponentProperty(PROPERTY_ALIGNMENT, newValue);
     }
 
     /**
@@ -630,7 +630,7 @@
      * @param newValue the new background image
      */
     public void setBackgroundImage(FillImage newValue) {
-        setProperty(PROPERTY_BACKGROUND_IMAGE, newValue);
+        setComponentProperty(PROPERTY_BACKGROUND_IMAGE, newValue);
     }
 
     /**
@@ -639,7 +639,7 @@
      * @param newValue the new border
      */
     public void setBorder(Border newValue) {
-        setProperty(PROPERTY_BORDER, newValue);
+        setComponentProperty(PROPERTY_BORDER, newValue);
     }
 
     /**
@@ -648,7 +648,7 @@
      * @param newValue the new <code>Color</code>
      */
     public void setDisabledBackground(Color newValue) {
-        setProperty(PROPERTY_DISABLED_BACKGROUND, newValue);
+        setComponentProperty(PROPERTY_DISABLED_BACKGROUND, newValue);
     }
 
     /**
@@ -657,7 +657,7 @@
      * @param newValue the new background image
      */
     public void setDisabledBackgroundImage(FillImage newValue) {
-        setProperty(PROPERTY_DISABLED_BACKGROUND_IMAGE, newValue);
+        setComponentProperty(PROPERTY_DISABLED_BACKGROUND_IMAGE, newValue);
     }
 
     /**
@@ -666,7 +666,7 @@
      * @param newValue the new border
      */
     public void setDisabledBorder(Border newValue) {
-        setProperty(PROPERTY_DISABLED_BORDER, newValue);
+        setComponentProperty(PROPERTY_DISABLED_BORDER, newValue);
     }
 
     /**
@@ -675,7 +675,7 @@
      * @param newValue the new <code>Font</code>
      */
     public void setDisabledFont(Font newValue) {
-        setProperty(PROPERTY_DISABLED_FONT, newValue);
+        setComponentProperty(PROPERTY_DISABLED_FONT, newValue);
     }
 
     /**
@@ -684,7 +684,7 @@
      * @param newValue the new <code>Color</code>
      */
     public void setDisabledForeground(Color newValue) {
-        setProperty(PROPERTY_DISABLED_FOREGROUND, newValue);
+        setComponentProperty(PROPERTY_DISABLED_FOREGROUND, newValue);
     }
 
     /**
@@ -694,7 +694,7 @@
      * @param newValue the new icon
      */
     public void setDisabledIcon(ImageReference newValue) {
-        setProperty(PROPERTY_DISABLED_ICON, newValue);
+        setComponentProperty(PROPERTY_DISABLED_ICON, newValue);
     }
 
     /**
@@ -703,7 +703,7 @@
      * @param newValue the new <code>Color</code>
      */
     public void setFocusedBackground(Color newValue) {
-        setProperty(PROPERTY_FOCUSED_BACKGROUND, newValue);
+        setComponentProperty(PROPERTY_FOCUSED_BACKGROUND, newValue);
     }
 
     /**
@@ -712,7 +712,7 @@
      * @param newValue the new background image
      */
     public void setFocusedBackgroundImage(FillImage newValue) {
-        setProperty(PROPERTY_FOCUSED_BACKGROUND_IMAGE, newValue);
+        setComponentProperty(PROPERTY_FOCUSED_BACKGROUND_IMAGE, newValue);
     }
 
     /**
@@ -721,7 +721,7 @@
      * @param newValue the new border
      */
     public void setFocusedBorder(Border newValue) {
-        setProperty(PROPERTY_FOCUSED_BORDER, newValue);
+        setComponentProperty(PROPERTY_FOCUSED_BORDER, newValue);
     }
 
     /**
@@ -732,7 +732,7 @@
      * @param newValue true if focused effects should be enabled
      */
     public void setFocusedEnabled(boolean newValue) {
-        setProperty(PROPERTY_FOCUSED_ENABLED, new Boolean(newValue));
+        setComponentProperty(PROPERTY_FOCUSED_ENABLED, new Boolean(newValue));
     }
 
     /**
@@ -741,7 +741,7 @@
      * @param newValue the new <code>Font</code>
      */
     public void setFocusedFont(Font newValue) {
-        setProperty(PROPERTY_FOCUSED_FONT, newValue);
+        setComponentProperty(PROPERTY_FOCUSED_FONT, newValue);
     }
 
     /**
@@ -750,7 +750,7 @@
      * @param newValue the new <code>Color</code>
      */
     public void setFocusedForeground(Color newValue) {
-        setProperty(PROPERTY_FOCUSED_FOREGROUND, newValue);
+        setComponentProperty(PROPERTY_FOCUSED_FOREGROUND, newValue);
     }
 
     /**
@@ -760,7 +760,7 @@
      * @param newValue the new icon
      */
     public void setFocusedIcon(ImageReference newValue) {
-        setProperty(PROPERTY_FOCUSED_ICON, newValue);
+        setComponentProperty(PROPERTY_FOCUSED_ICON, newValue);
     }
 
     /**
@@ -771,7 +771,7 @@
      * @param newValue the new height
      */
     public void setHeight(Extent newValue) {
-        setProperty(PROPERTY_HEIGHT, newValue);
+        setComponentProperty(PROPERTY_HEIGHT, newValue);
     }
 
     /**
@@ -780,7 +780,7 @@
      * @param newValue the new icon
      */
     public void setIcon(ImageReference newValue) {
-        setProperty(PROPERTY_ICON, newValue);
+        setComponentProperty(PROPERTY_ICON, newValue);
     }
 
     /**
@@ -793,7 +793,7 @@
      * @param newValue the margin size 
      */
     public void setIconTextMargin(Extent newValue) {
-        setProperty(PROPERTY_ICON_TEXT_MARGIN, newValue);
+        setComponentProperty(PROPERTY_ICON_TEXT_MARGIN, newValue);
     }
 
     /**
@@ -802,7 +802,7 @@
      * @param newValue the new margin
      */
     public void setInsets(Insets newValue) {
-        setProperty(PROPERTY_INSETS, newValue);
+        setComponentProperty(PROPERTY_INSETS, newValue);
     }
 
     /**
@@ -812,7 +812,7 @@
      * @param newValue the new line wrap state
      */
     public void setLineWrap(boolean newValue) {
-        setProperty(PROPERTY_LINE_WRAP, new Boolean(newValue));
+        setComponentProperty(PROPERTY_LINE_WRAP, new Boolean(newValue));
     }
     
     /**
@@ -833,7 +833,7 @@
 
         newValue.addActionListener(actionForwarder);
 
-        setProperty(PROPERTY_MODEL, newValue);
+        setComponentProperty(PROPERTY_MODEL, newValue);
     }
 
     /**
@@ -842,7 +842,7 @@
      * @param newValue the new <code>Color</code>
      */
     public void setPressedBackground(Color newValue) {
-        setProperty(PROPERTY_PRESSED_BACKGROUND, newValue);
+        setComponentProperty(PROPERTY_PRESSED_BACKGROUND, newValue);
     }
 
     /**
@@ -851,7 +851,7 @@
      * @param newValue the new background image
      */
     public void setPressedBackgroundImage(FillImage newValue) {
-        setProperty(PROPERTY_PRESSED_BACKGROUND_IMAGE, newValue);
+        setComponentProperty(PROPERTY_PRESSED_BACKGROUND_IMAGE, newValue);
     }
 
     /**
@@ -860,7 +860,7 @@
      * @param newValue the new border
      */
     public void setPressedBorder(Border newValue) {
-        setProperty(PROPERTY_PRESSED_BORDER, newValue);
+        setComponentProperty(PROPERTY_PRESSED_BORDER, newValue);
     }
 
     /**
@@ -871,7 +871,7 @@
      * @param newValue true if pressed effects should be enabled
      */
     public void setPressedEnabled(boolean newValue) {
-        setProperty(PROPERTY_PRESSED_ENABLED, new Boolean(newValue));
+        setComponentProperty(PROPERTY_PRESSED_ENABLED, new Boolean(newValue));
     }
 
     /**
@@ -880,7 +880,7 @@
      * @param newValue the new <code>Font</code>
      */
     public void setPressedFont(Font newValue) {
-        setProperty(PROPERTY_PRESSED_FONT, newValue);
+        setComponentProperty(PROPERTY_PRESSED_FONT, newValue);
     }
 
     /**
@@ -889,7 +889,7 @@
      * @param newValue the new <code>Color</code>
      */
     public void setPressedForeground(Color newValue) {
-        setProperty(PROPERTY_PRESSED_FOREGROUND, newValue);
+        setComponentProperty(PROPERTY_PRESSED_FOREGROUND, newValue);
     }
 
     /**
@@ -898,7 +898,7 @@
      * @param newValue the new icon
      */
     public void setPressedIcon(ImageReference newValue) {
-        setProperty(PROPERTY_PRESSED_ICON, newValue);
+        setComponentProperty(PROPERTY_PRESSED_ICON, newValue);
     }
 
     /**
@@ -908,7 +908,7 @@
      * @param newValue the new <code>Color</code>
      */
     public void setRolloverBackground(Color newValue) {
-        setProperty(PROPERTY_ROLLOVER_BACKGROUND, newValue);
+        setComponentProperty(PROPERTY_ROLLOVER_BACKGROUND, newValue);
     }
 
     /**
@@ -918,7 +918,7 @@
      * @param newValue the new background image
      */
     public void setRolloverBackgroundImage(FillImage newValue) {
-        setProperty(PROPERTY_ROLLOVER_BACKGROUND_IMAGE, newValue);
+        setComponentProperty(PROPERTY_ROLLOVER_BACKGROUND_IMAGE, newValue);
     }
 
     /**
@@ -928,7 +928,7 @@
      * @param newValue the new border
      */
     public void setRolloverBorder(Border newValue) {
-        setProperty(PROPERTY_ROLLOVER_BORDER, newValue);
+        setComponentProperty(PROPERTY_ROLLOVER_BORDER, newValue);
     }
 
     /**
@@ -939,7 +939,7 @@
      * @param newValue true if rollover effects should be enabled
      */
     public void setRolloverEnabled(boolean newValue) {
-        setProperty(PROPERTY_ROLLOVER_ENABLED, new Boolean(newValue));
+        setComponentProperty(PROPERTY_ROLLOVER_ENABLED, new Boolean(newValue));
     }
 
     /**
@@ -948,7 +948,7 @@
      * @param newValue the new <code>Font</code>
      */
     public void setRolloverFont(Font newValue) {
-        setProperty(PROPERTY_ROLLOVER_FONT, newValue);
+        setComponentProperty(PROPERTY_ROLLOVER_FONT, newValue);
     }
 
     /**
@@ -958,7 +958,7 @@
      * @param newValue the new <code>Color</code>
      */
     public void setRolloverForeground(Color newValue) {
-        setProperty(PROPERTY_ROLLOVER_FOREGROUND, newValue);
+        setComponentProperty(PROPERTY_ROLLOVER_FOREGROUND, newValue);
     }
 
     /**
@@ -968,7 +968,7 @@
      * @param newValue the new icon
      */
     public void setRolloverIcon(ImageReference newValue) {
-        setProperty(PROPERTY_ROLLOVER_ICON, newValue);
+        setComponentProperty(PROPERTY_ROLLOVER_ICON, newValue);
     }
 
     /**
@@ -977,7 +977,7 @@
      * @param newValue the new text label
      */
     public void setText(String newValue) {
-        setProperty(PROPERTY_TEXT, newValue);
+        setComponentProperty(PROPERTY_TEXT, newValue);
     }
 
     /**
@@ -988,7 +988,7 @@
      * @param newValue the new text alignment
      */
     public void setTextAlignment(Alignment newValue) {
-        setProperty(PROPERTY_TEXT_ALIGNMENT, newValue);
+        setComponentProperty(PROPERTY_TEXT_ALIGNMENT, newValue);
     }
     
     /**
@@ -999,7 +999,7 @@
      * @param newValue the new text position
      */
     public void setTextPosition(Alignment newValue) {
-        setProperty(PROPERTY_TEXT_POSITION, newValue);
+        setComponentProperty(PROPERTY_TEXT_POSITION, newValue);
     }
     
     /**
@@ -1009,7 +1009,7 @@
      * @param newValue the new tool tip text
      */
     public void setToolTipText(String newValue) {
-        setProperty(PROPERTY_TOOL_TIP_TEXT, newValue);
+        setComponentProperty(PROPERTY_TOOL_TIP_TEXT, newValue);
     }
 
     /**
@@ -1020,6 +1020,6 @@
      * @param newValue the new width
      */
     public void setWidth(Extent newValue) {
-        setProperty(PROPERTY_WIDTH, newValue);
+        setComponentProperty(PROPERTY_WIDTH, newValue);
     }
 }
Index: src/server-java/app/nextapp/echo/app/button/ToggleButton.java
===================================================================
--- src/server-java/app/nextapp/echo/app/button/ToggleButton.java	(revision 1230)
+++ src/server-java/app/nextapp/echo/app/button/ToggleButton.java	(working copy)
@@ -108,7 +108,7 @@
      * @return the icon
      */
     public ImageReference getDisabledSelectedStateIcon() {
-        return (ImageReference) getProperty(PROPERTY_DISABLED_SELECTED_STATE_ICON);
+        return (ImageReference) getComponentProperty(PROPERTY_DISABLED_SELECTED_STATE_ICON);
     }
     
     /**
@@ -117,7 +117,7 @@
      * @return the icon
      */
     public ImageReference getDisabledStateIcon() {
-        return (ImageReference) getProperty(PROPERTY_DISABLED_STATE_ICON);
+        return (ImageReference) getComponentProperty(PROPERTY_DISABLED_STATE_ICON);
     }
     
     /**
@@ -127,7 +127,7 @@
      * @return the icon
      */
     public ImageReference getPressedSelectedStateIcon() {
-        return (ImageReference) getProperty(PROPERTY_PRESSED_SELECTED_STATE_ICON);
+        return (ImageReference) getComponentProperty(PROPERTY_PRESSED_SELECTED_STATE_ICON);
     }
     
     /**
@@ -137,7 +137,7 @@
      * @return the icon
      */
     public ImageReference getPressedStateIcon() {
-        return (ImageReference) getProperty(PROPERTY_PRESSED_STATE_ICON);
+        return (ImageReference) getComponentProperty(PROPERTY_PRESSED_STATE_ICON);
     }
     
     /**
@@ -147,7 +147,7 @@
      * @return the icon
      */
     public ImageReference getRolloverSelectedStateIcon() {
-        return (ImageReference) getProperty(PROPERTY_ROLLOVER_SELECTED_STATE_ICON);
+        return (ImageReference) getComponentProperty(PROPERTY_ROLLOVER_SELECTED_STATE_ICON);
     }
     
     /**
@@ -157,7 +157,7 @@
      * @return the icon
      */
     public ImageReference getRolloverStateIcon() {
-        return (ImageReference) getProperty(PROPERTY_ROLLOVER_STATE_ICON);
+        return (ImageReference) getComponentProperty(PROPERTY_ROLLOVER_STATE_ICON);
     }
     
     /**
@@ -166,7 +166,7 @@
      * @return the icon
      */
     public ImageReference getSelectedStateIcon() {
-        return (ImageReference) getProperty(PROPERTY_SELECTED_STATE_ICON);
+        return (ImageReference) getComponentProperty(PROPERTY_SELECTED_STATE_ICON);
     }
     
     /**
@@ -176,7 +176,7 @@
      * @return the state alignment
      */
     public Alignment getStateAlignment() {
-        return (Alignment) getProperty(PROPERTY_STATE_ALIGNMENT);
+        return (Alignment) getComponentProperty(PROPERTY_STATE_ALIGNMENT);
     }
 
     /**
@@ -185,7 +185,7 @@
      * @return the icon
      */
     public ImageReference getStateIcon() {
-        return (ImageReference) getProperty(PROPERTY_STATE_ICON);
+        return (ImageReference) getComponentProperty(PROPERTY_STATE_ICON);
     }
     
     /**
@@ -199,7 +199,7 @@
      * @return the margin size 
      */
     public Extent getStateMargin() {
-        return (Extent) getProperty(PROPERTY_STATE_MARGIN);
+        return (Extent) getComponentProperty(PROPERTY_STATE_MARGIN);
     }
 
     /**
@@ -209,7 +209,7 @@
      * @return the state position
      */
     public Alignment getStatePosition() {
-        return (Alignment) getProperty(PROPERTY_STATE_POSITION);
+        return (Alignment) getComponentProperty(PROPERTY_STATE_POSITION);
     }
     
     /**
@@ -247,7 +247,7 @@
      * @param newValue the new icon
      */
     public void setDisabledSelectedStateIcon(ImageReference newValue) {
-        setProperty(PROPERTY_DISABLED_SELECTED_STATE_ICON, newValue);
+        setComponentProperty(PROPERTY_DISABLED_SELECTED_STATE_ICON, newValue);
     }
     
     /**
@@ -256,7 +256,7 @@
      * @param newValue the new icon
      */
     public void setDisabledStateIcon(ImageReference newValue) {
-        setProperty(PROPERTY_DISABLED_STATE_ICON, newValue);
+        setComponentProperty(PROPERTY_DISABLED_STATE_ICON, newValue);
     }
     
     /**
@@ -285,7 +285,7 @@
      * @param newValue the new icon
      */
     public void setPressedSelectedStateIcon(ImageReference newValue) {
-        setProperty(PROPERTY_PRESSED_SELECTED_STATE_ICON, newValue);
+        setComponentProperty(PROPERTY_PRESSED_SELECTED_STATE_ICON, newValue);
     }
     
     /**
@@ -295,7 +295,7 @@
      * @param newValue the new icon
      */
     public void setPressedStateIcon(ImageReference newValue) {
-        setProperty(PROPERTY_PRESSED_STATE_ICON, newValue);
+        setComponentProperty(PROPERTY_PRESSED_STATE_ICON, newValue);
     }
     
     /**
@@ -305,7 +305,7 @@
      * @param newValue the new icon
      */
     public void setRolloverSelectedStateIcon(ImageReference newValue) {
-        setProperty(PROPERTY_ROLLOVER_SELECTED_STATE_ICON, newValue);
+        setComponentProperty(PROPERTY_ROLLOVER_SELECTED_STATE_ICON, newValue);
     }
     
     /**
@@ -315,7 +315,7 @@
      * @param newValue the new icon
      */
     public void setRolloverStateIcon(ImageReference newValue) {
-        setProperty(PROPERTY_ROLLOVER_STATE_ICON, newValue);
+        setComponentProperty(PROPERTY_ROLLOVER_STATE_ICON, newValue);
     }
     
     /**
@@ -324,7 +324,7 @@
      * @param newValue the new icon
      */
     public void setSelectedStateIcon(ImageReference newValue) {
-        setProperty(PROPERTY_SELECTED_STATE_ICON, newValue);
+        setComponentProperty(PROPERTY_SELECTED_STATE_ICON, newValue);
     }
     
     /**
@@ -345,7 +345,7 @@
      * @param newValue the new state alignment
      */
     public void setStateAlignment(Alignment newValue) {
-        setProperty(PROPERTY_STATE_ALIGNMENT, newValue);
+        setComponentProperty(PROPERTY_STATE_ALIGNMENT, newValue);
     }
     
     /**
@@ -354,7 +354,7 @@
      * @param newValue the new icon
      */
     public void setStateIcon(ImageReference newValue) {
-        setProperty(PROPERTY_STATE_ICON, newValue);
+        setComponentProperty(PROPERTY_STATE_ICON, newValue);
     }
     
     /**
@@ -368,7 +368,7 @@
      * @param newValue the new margin size 
      */
     public void setStateMargin(Extent newValue) {
-        setProperty(PROPERTY_STATE_MARGIN, newValue);
+        setComponentProperty(PROPERTY_STATE_MARGIN, newValue);
     }
 
     /**
@@ -380,6 +380,6 @@
      * @param newValue the new state position
      */
     public void setStatePosition(Alignment newValue) {
-        setProperty(PROPERTY_STATE_POSITION, newValue);
+        setComponentProperty(PROPERTY_STATE_POSITION, newValue);
     }
 }
Index: src/server-java/app/nextapp/echo/app/Column.java
===================================================================
--- src/server-java/app/nextapp/echo/app/Column.java	(revision 1230)
+++ src/server-java/app/nextapp/echo/app/Column.java	(working copy)
@@ -61,7 +61,7 @@
      * @return the border
      */
     public Border getBorder() {
-        return (Border) getProperty(PROPERTY_BORDER);
+        return (Border) getComponentProperty(PROPERTY_BORDER);
     }
     
     /**
@@ -72,7 +72,7 @@
      * @return the cell spacing
      */
     public Extent getCellSpacing() {
-        return (Extent) getProperty(PROPERTY_CELL_SPACING);
+        return (Extent) getComponentProperty(PROPERTY_CELL_SPACING);
     }
     
     /**
@@ -83,7 +83,7 @@
      * @return the inset
      */
     public Insets getInsets() {
-        return (Insets) getProperty(PROPERTY_INSETS);
+        return (Insets) getComponentProperty(PROPERTY_INSETS);
     }
     
      /**
@@ -92,7 +92,7 @@
      * @param newValue the new border
      */
     public void setBorder(Border newValue) {
-        setProperty(PROPERTY_BORDER, newValue);
+        setComponentProperty(PROPERTY_BORDER, newValue);
     }
     
     /**
@@ -103,7 +103,7 @@
      * @param newValue the new spacing
      */
     public void setCellSpacing(Extent newValue) {
-        setProperty(PROPERTY_CELL_SPACING, newValue);
+        setComponentProperty(PROPERTY_CELL_SPACING, newValue);
     }
     
     /**
@@ -114,6 +114,6 @@
      * @param newValue the new inset
      */
     public void setInsets(Insets newValue) {
-        setProperty(PROPERTY_INSETS, newValue);
+        setComponentProperty(PROPERTY_INSETS, newValue);
     }
 }
Index: src/server-java/webcontainer/nextapp/echo/webcontainer/resource/RemoteClient.js
===================================================================
--- src/server-java/webcontainer/nextapp/echo/webcontainer/resource/RemoteClient.js	(revision 1230)
+++ src/server-java/webcontainer/nextapp/echo/webcontainer/resource/RemoteClient.js	(working copy)
@@ -46,6 +46,13 @@
     },
     
     /**
+     * Listeners to be notified of remote client events.
+     * @private
+     * @type Core.ListenerList
+     */
+    _listenerList: null,
+    
+    /**
      * The base server url.
      * @type String
      * @private
@@ -144,6 +151,7 @@
         Echo.Client.call(this);
         
         this._serverUrl = serverUrl;
+        this._listenerList = new Core.ListenerList();
         this._processClientUpdateRef = Core.method(this, this._processClientUpdate);
         this._processClientEventRef = Core.method(this, this._processClientEvent);
         this._urlMappings = {};
@@ -170,6 +178,17 @@
     },
     
     /**
+     * Adds a listener to be notified when a server update has been
+     * completely processed, that is, all component and rendering
+     * updates have been completed.
+     * 
+     * @param {Function} l the listener to add
+     */
+    addServerUpdateCompleteListener: function(l) {
+        this._listenerList.addListener("serverUpdateComplete", l);
+    },
+    
+    /**
      * Decompresses a shorthand URL into a valid full-length URL.
      * A shorthand URL is expressed as "!A!xxxx" where
      * "A" is a key whose value contains the first portion of the URL
@@ -384,6 +403,10 @@
             this._waitIndicatorActive = false;
             this._waitIndicator.deactivate();
         }
+        
+        if (this._listenerList.hasListeners("serverUpdateComplete")) {
+            this._listenerList.fireEvent({type: "serverUpdateComplete"});
+        }
     },
     
     /**
@@ -439,8 +462,17 @@
     removeComponentListener: function(component, eventType) {
         component.removeListener(eventType, this._processClientEventRef);
     },
-    
+        
     /**
+     * Removes a ServerUpdateCompleteListener.
+     * 
+     * @param {Function} l the listener to remove
+     */
+    removeServerUpdateCompleteListener: function(l) {
+        this._listenerList.removeListener("serverUpdateComplete", l);
+    },
+
+    /**
      * Sets the wait indicator that will be displayed when a client-server action takes longer than
      * a specified period of time.
      * 
Index: src/server-java/webcontainer/nextapp/echo/webcontainer/WebContainerServlet.java
===================================================================
--- src/server-java/webcontainer/nextapp/echo/webcontainer/WebContainerServlet.java	(revision 1230)
+++ src/server-java/webcontainer/nextapp/echo/webcontainer/WebContainerServlet.java	(working copy)
@@ -41,9 +41,11 @@
 
 import java.io.IOException;
 import java.util.ArrayList;
+import java.util.HashSet;
 import java.util.Iterator;
 import java.util.List;
 
+import java.util.Set;
 import javax.servlet.ServletException;
 import javax.servlet.http.HttpServlet;
 import javax.servlet.http.HttpServletRequest;
@@ -388,5 +390,22 @@
             activeConnection.set(null);
         }
     }
+   
+    private Set cssFileNames = new HashSet();
     
-}
+    /**
+     * Adds a css file name to be added to the window html.
+     */
+    public void addCssFileName(String cssFileName) {
+        cssFileNames.add(cssFileName);
+    }
+    
+    /**
+     * Returns an iterator over the CSS file names.
+     * @return
+     */
+    public Iterator getCssFileNames() {
+        return cssFileNames.iterator();
+    }
+    
+}
\ No newline at end of file
Index: src/server-java/webcontainer/nextapp/echo/webcontainer/service/WindowHtmlService.java
===================================================================
--- src/server-java/webcontainer/nextapp/echo/webcontainer/service/WindowHtmlService.java	(revision 1230)
+++ src/server-java/webcontainer/nextapp/echo/webcontainer/service/WindowHtmlService.java	(working copy)
@@ -104,6 +104,21 @@
         styleElement.setAttribute("type", "text/css");
         styleElement.appendChild(document.createTextNode(" "));
         headElement.appendChild(styleElement);
+        
+        WebContainerServlet servlet = conn.getServlet();
+        
+        Iterator cssIt = servlet.getCssFileNames();
+        if (cssIt != null) {
+            while(cssIt.hasNext()) {
+                String cssFileName = (String) cssIt.next();
+                Element additionalStyleElement = document.createElement("link");
+                additionalStyleElement.setAttribute("href", cssFileName);
+                additionalStyleElement.setAttribute("type", "text/css");
+                additionalStyleElement.setAttribute("rel", "stylesheet");
+                additionalStyleElement.appendChild(document.createTextNode(" "));
+                headElement.appendChild(additionalStyleElement);
+            }
+        }
 
         Element scriptElement = document.createElement("script");
         Text textNode = document.createTextNode(" ");
@@ -111,8 +126,8 @@
         scriptElement.setAttribute("type", "text/javascript");
         scriptElement.setAttribute("src", userInstance.getServiceUri(BootService.SERVICE));
         headElement.appendChild(scriptElement);
+
         
-        WebContainerServlet servlet = conn.getServlet();
         Iterator scriptIt = servlet.getStartupScripts();
         if (scriptIt != null) {
             while (scriptIt.hasNext()) {
@@ -130,7 +145,7 @@
         bodyElement.setAttribute("id", "body");
         bodyElement.setAttribute("onload", "Echo.Boot.boot('" + userInstance.getServletUri() + "', " + debug + ");");
         bodyElement.setAttribute("style",
-                "height:100%;width:100%;margin:0px;padding: 0px;" +
+                "height:100%;width:100%;overflow:hidden;margin:0px;padding: 0px;" +
                 "font-family:verdana, arial, helvetica, sans-serif;font-size:10pt");
         htmlElement.appendChild(bodyElement);
 
Index: src/server-java/testapp-interactive/lib/nextapp/echo/testapp/interactive/testscreen/ArcTest.java
===================================================================
--- src/server-java/testapp-interactive/lib/nextapp/echo/testapp/interactive/testscreen/ArcTest.java	(revision 1230)
+++ src/server-java/testapp-interactive/lib/nextapp/echo/testapp/interactive/testscreen/ArcTest.java	(working copy)
@@ -65,11 +65,11 @@
         public static final String PROPERTY_TEXT = "text";
         
         public String getText() {
-            return (String) getProperty(PROPERTY_TEXT);
+            return (String) getComponentProperty(PROPERTY_TEXT);
         }
         
         public void setText(String newValue) {
-            setProperty(PROPERTY_TEXT, newValue);
+            setComponentProperty(PROPERTY_TEXT, newValue);
         }
     }
     

Property changes on: src/client/echo
___________________________________________________________________
Name: svn:ignore
   + .Sync.TextComponent.js.swp


Index: src/client/echo/Render.js
===================================================================
--- src/client/echo/Render.js	(revision 1230)
+++ src/client/echo/Render.js	(working copy)
@@ -30,6 +30,23 @@
      * @type Object
      */
     _disposedComponents: null,
+
+        
+    /**
+     * Listeners to be notified of rendering phase events.
+     * @type Core.ListenerList
+     */
+    _listenerList: new Core.ListenerList(),
+
+    /**
+     * Adds a listener to be notified when the renderDisplay
+     * phase of an update has been completed.
+     * 
+     * @param {Function} l the listener to add
+     */
+    addRenderDisplayCompleteListener: function(l) {
+        Echo.Render._listenerList.addListener("renderDisplayComplete", l);
+    },
     
     //FIXME.  Scrollbar position tracking code in SplitPane appears to suggest that
     // disposed states are not in good shape....SplitPane is being disposed when
@@ -262,6 +279,11 @@
                 Echo.Render._doRenderDisplay(updates[i].parent, true);
             }
         }
+
+	// call any listeners that want to know when when the render display phase is finished
+        if (Echo.Render._listenerList.hasListeners("renderDisplayComplete")) {
+            Echo.Render._listenerList.fireEvent({type: "renderDisplayComplete"});
+        }
     
         // Profiling: Mark completion of display phase.
         if (Echo.Client.profilingTimer) {
@@ -298,6 +320,15 @@
         }
         this._peers[componentName] = peerObject;
     },
+
+    /**
+     * Removes a renderDisplayCompleteListener.
+     * 
+     * @param {Function} l the listener to remove
+     */
+    removeRenderDisplayCompleteListener: function(l) {
+        this._listenerList.removeListener("renderDisplayComplete", l);
+    },
     
     /**
      * Renders a new component inside of a DOM element.
Index: src/client/echo/Application.js
===================================================================
--- src/client/echo/Application.js	(revision 1230)
+++ src/client/echo/Application.js	(working copy)
@@ -1026,8 +1026,9 @@
             if (this._style != null) {
                 value = this._style[name];
             }
-            if (value == null && this._styleName && this.application && this.application._styleSheet) {
-                var style = this.application._styleSheet.getRenderStyle(this._styleName, this.componentType);
+            if (value == null && this.application && this.application._styleSheet) {
+                var style = this.application._styleSheet.getRenderStyle(
+                    this._styleName != null ? this._styleName : "", this.componentType);
                 if (style) {
                     value = style[name];
                 }
@@ -1056,7 +1057,8 @@
                 value = valueArray ? valueArray[index] : null;
             }
             if (value == null && this._styleName && this.application && this.application._styleSheet) {
-                var style = this.application._styleSheet.getRenderStyle(this._styleName, this.componentType);
+                var style = this.application._styleSheet.getRenderStyle(
+                    this._styleName != null ? this._styleName : "", this.componentType);
                 if (style) {
                     valueArray = style[name];
                     value = valueArray ? valueArray[index] : null;
Index: build.xml
===================================================================
--- build.xml	(revision 1230)
+++ build.xml	(working copy)
@@ -422,5 +422,39 @@
         <gzip src="${dir.release}/${tarfile.release}" zipfile="${dir.release}/${tgzfile.release}"/>
         <delete file="${dir.release}/${tarfile.release}"/>
     </target>
+	
+	<target name="mvn-install-win"
+			depends="dist"
+			description="Installs the jars into the local maven repository (windows environment)">
+		<exec executable="cmd">
+			<arg value="/c"/>
+			<arg value="mvn install:install-file -DgroupId=com.nextapp -DartifactId=echo3-app -Dversion=1.0-SNAPSHOT -Dpackaging=jar -Dfile=dist${file.separator}lib${file.separator}Echo3_App.jar"/>
+		</exec>
+		<exec executable="cmd">
+			<arg value="/c"/>
+			<arg value="mvn install:install-file -DgroupId=com.nextapp -DartifactId=echo3-webcontainer -Dversion=1.0-SNAPSHOT -Dpackaging=jar -Dfile=dist${file.separator}lib${file.separator}Echo3_WebContainer.jar"/>
+		</exec>
+	</target>
+	
+	<target name="mvn-install-unix"
+			depends="dist"
+			description="Installs the jar into the local maven repository">
+		<exec executable="mvn">
+			<arg value="install:install-file"/>
+			<arg value="-DgroupId=com.nextapp"/>
+			<arg value="-DartifactId=echo3-app"/>
+			<arg value="-Dversion=1.0-SNAPSHOT"/>
+			<arg value="-Dpackaging=jar"/>
+			<arg value="-Dfile=dist${file.separator}lib${file.separator}Echo3_App.jar"/>
+		</exec>
+		<exec executable="mvn">
+			<arg value="install:install-file"/>
+			<arg value="-DgroupId=com.nextapp"/>
+			<arg value="-DartifactId=echo3-webcontainer"/>
+			<arg value="-Dversion=1.0-SNAPSHOT"/>
+			<arg value="-Dpackaging=jar"/>
+			<arg value="-Dfile=dist${file.separator}lib${file.separator}Echo3_WebContainer.jar"/>
+		</exec>
+	</target>
     
 </project>
