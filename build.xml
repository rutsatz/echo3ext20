<?xml version="1.0"?>
<project name="Echo_3_Ext_20" default="war" basedir=".">
    
    <property file="build.properties"/>
    
    <property name="classes.dir" value="bin"/>
    <property name="build.dir" value="build"/>
    <property name="jar.name" value="echo3ext20.jar"/>
	<property name="sources.jar.name" value="echo3ext20-sources.jar"/>
    <property name="war.name" value="echo3ext20.war"/>
	
	<property name="ext.version" value="2.0.2"/>
    
    <available file="contrib/ext-${ext.version}" type="dir" property="ext-dir-exists"/>
    
    <path id="compile.class.path">
        <fileset dir="src/webapp/WEB-INF/lib"/>
        <fileset dir="lib"/>
        <pathelement path="${servlet.api.jar}"/>
    </path>
    
    <target name="clean">
        <delete dir="${classes.dir}"/>
        <delete dir="${build.dir}"/>
        <delete dir="doc"/>
    </target>
    
    <target name="compile" depends="clean">
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${build.dir}"/>
        <javac 
            destdir="${classes.dir}" 
            srcdir="src/java" 
            debug="true"
            classpathref="compile.class.path"/>
    </target>
    
    <target name="doc">
        <javadoc
        	access="protected"
            destdir="docs/api"
            author="true"
            use="true"
            windowtitle="Echo3Ext20 Public API documentation"
            classpathref="compile.class.path"
            stylesheetfile="${basedir}/resources/css/stylesheet.css">
                
            <packageset 
            	dir="src/java" 
            	includes="org/sgodden/echo/ext20,org/sgodden/echo/ext20/data,org/sgodden/echo/ext20/grid,org/sgodden/echo/ext20/layout" 
            	defaultexcludes="yes">
            </packageset>
			<link href="http://java.sun.com/j2se/1.5.0/docs/api/"/>
        	<link offline="true"
        		href="http://echo.nextapp.com/content/echo3/doc/3.0/api/public/"
        		packageListLoc="${basedir}/echo3-package-list"/>
        </javadoc>
    </target>
    
    <target name="jar" depends="compile, unpack-ext">
        <jar destfile="${build.dir}/${jar.name}">
            <fileset dir="${classes.dir}"/>
            <fileset dir="src/java" includes="**/*.js, META-INF/**/*"/>
            <zipfileset 
                prefix = "ext" 
                dir="contrib/ext-${ext.version}" 
                includes="ext-all.js, ext-all-debug.js, adapter/ext/ext-base.js"/>
        	<zipfileset
        		prefix="META-INF/maven/org.sgodden/echo3ext20"
        		dir="maven"/>
        </jar>
        <jar destfile="${build.dir}/${sources.jar.name}">
            <fileset dir="src/java" includes="**/*.java"/>
        </jar>
    </target>
    
    <target name="unpack-ext" unless="ext-dir-exists">
        <unzip src="contrib/ext-${ext.version}.zip" dest="contrib"/>
    </target>
    
    <target name="war" depends="jar">
        <mkdir dir="${build.dir}/webapps"/>
        <war 
            destfile="${build.dir}/webapps/${war.name}" 
            basedir="src/webapp"
            webxml="src/webapp/WEB-INF/web.xml">
            <lib file="build/*jar"/>
        	<zipfileset 
        		prefix="resources/ext" 
        		dir="contrib/ext-${ext.version}/resources"
        		includes="**/*"/>
        </war>
    </target>
    
    <target name="deploy" depends="war">
        <copy todir="${deploy.dir}" file="${build.dir}/${war.name}"/>
    </target>
    
    <target name="deploy-tomcat" depends="war">
        <unzip src="${build.dir}/${war.name}" dest="${deploy.dir}/echo3ext20"></unzip>
    </target>
    
    <target name="run-server" depends="war">
        <java dir="${basedir}" 
              fork="true" 
              classname="org.sgodden.echo.ext20.testapp.JettyServer">
            <jvmarg value="-Xmx256m"/>
            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Decho.syncdump=true"/>
            <!--<jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"/>-->
            <classpath>
                <pathelement location="${classes.dir}"/>
                <pathelement location="${servlet.api.jar}"/>
                <fileset dir="lib"/>
            </classpath>
        </java>
    </target>
	
	<target name="mvn-install"
			depends="os-detect, jar"
			description="Builds and installs into the local maven repository">
		<antcall target="mvn-install-unix"/>
		<antcall target="mvn-install-windows"/>
	</target>
	
	
	<target name="mvn-install-unix"
			if="is-unix"
			description="Installs the jar into the local maven repository">
		<exec executable="mvn">
			<arg value="install:install-file"/>
			<arg value="-DgroupId=org.sgodden"/>
			<arg value="-DartifactId=echo3ext20"/>
			<arg value="-Dversion=1.0-SNAPSHOT"/>
			<arg value="-Dpackaging=jar"/>
			<arg value="-Dfile=build${file.separator}echo3ext20.jar"/>
		</exec>
	</target>
	
	<target name="mvn-install-windows"
			if="is-windows"
			description="Installs the jar into the local maven repository (windows environment)">
		<exec executable="cmd">
			<arg value="/c"/>
			<arg value="mvn install:install-file -DgroupId=org.sgodden -DartifactId=echo3ext20 -Dversion=1.0-SNAPSHOT -Dpackaging=jar -Dfile=build${file.separator}echo3ext20.jar"/>
		</exec>
	</target>
	
	<target name="os-detect">
	  	<condition property="is-unix" value="true">
	  	     <os family="unix"/>
	  	</condition>
	  	<condition property="is-windows" value="true">
	  		<os family="windows"/>
	  	</condition>
    </target>
    
    
</project>
