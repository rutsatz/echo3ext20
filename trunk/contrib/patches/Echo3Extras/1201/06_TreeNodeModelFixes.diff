diff -r 37487d3f651b src/server-java/app/nextapp/echo/extras/app/tree/AbstractTreeNode.java
--- a/src/server-java/app/nextapp/echo/extras/app/tree/AbstractTreeNode.java	Mon Oct 05 16:01:53 2009 +0100
+++ b/src/server-java/app/nextapp/echo/extras/app/tree/AbstractTreeNode.java	Wed Oct 28 15:29:06 2009 +0000
@@ -37,6 +37,14 @@
         return children;
     }
     
+    private TreeNode[] getChildren(TreeNode parent, int[] childIndices) {
+        TreeNode[] children = new TreeNode[childIndices.length];
+        for (int i = 0; i < children.length; i++) {
+            children[i] = parent.getChild(childIndices[i]);
+        }
+        return children;
+    }
+    
     /**
      * Notifies all listeners that have registered interest for notification on
      * this event type. The event instance is lazily created using the
@@ -56,7 +64,7 @@
         for (int i = 0; i < listeners.length; ++i) {
             // Lazily create the event:
             if (e == null) {
-                e = new TreeModelEvent(parent, getPathToRoot(parent), childIndices, getChildren(childIndices));
+                e = new TreeModelEvent(parent, getPathToRoot(parent), childIndices, getChildren(parent, childIndices));
             }
             ((TreeModelListener) listeners[i]).treeNodesChanged(e);
         }
@@ -97,14 +105,14 @@
      * @param children the removed elements
      * @see EventListenerList
      */
-    protected void fireTreeNodesRemoved(int[] childIndices) {
+    protected void fireTreeNodesRemoved(int[] childIndices, TreeNode[] children) {
         // Guaranteed to return a non-null array
         Object[] listeners = listenerList.getListeners(TreeModelListener.class);
         TreeModelEvent e = null;
         for (int i = 0; i < listeners.length; i++) {
             // Lazily create the event:
             if (e == null) {
-                e = new TreeModelEvent(this, getPathToRoot(this), childIndices, getChildren(childIndices));
+                e = new TreeModelEvent(this, getPathToRoot(this), childIndices, children);
             }
             ((TreeModelListener) listeners[i]).treeNodesRemoved(e);
         }
diff -r 37487d3f651b src/server-java/app/nextapp/echo/extras/app/tree/DefaultMutableTreeNode.java
--- a/src/server-java/app/nextapp/echo/extras/app/tree/DefaultMutableTreeNode.java	Mon Oct 05 16:01:53 2009 +0100
+++ b/src/server-java/app/nextapp/echo/extras/app/tree/DefaultMutableTreeNode.java	Wed Oct 28 15:29:06 2009 +0000
@@ -170,12 +170,12 @@
         for (int i = 0; i < children.length; i++) {
             children[i] = i;
         }
-        Object[] childNodes = this.children.toArray(); 
+        TreeNode[] childNodes = (TreeNode[])this.children.toArray(new TreeNode[this.children.size()]); 
         this.children.removeAllElements();
         for (int i = 0; i < childNodes.length; i++) {
             ((TreeNode)childNodes[i]).setParent(null);
         }
-        fireTreeNodesRemoved(children);
+        fireTreeNodesRemoved(children, childNodes);
     }
 
     /**
@@ -188,7 +188,7 @@
             return;
         children.remove(node);
         node.setParent(null);
-        fireTreeNodesRemoved(new int[] {index});
+        fireTreeNodesRemoved(new int[] {index}, new TreeNode[] {node});
     }
 
     /**
diff -r 37487d3f651b src/server-java/app/nextapp/echo/extras/app/tree/TreeNodeModel.java
--- a/src/server-java/app/nextapp/echo/extras/app/tree/TreeNodeModel.java	Mon Oct 05 16:01:53 2009 +0100
+++ b/src/server-java/app/nextapp/echo/extras/app/tree/TreeNodeModel.java	Wed Oct 28 15:29:06 2009 +0000
@@ -56,6 +56,7 @@
             this.columnKeys = columnKeys;
         else
             compileColumns();
+        addListenersToTree(root);
     }
     
     /**
