diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/META-INF/nextapp/echo/XmlPeers.properties
--- a/build/server-java/app/META-INF/nextapp/echo/XmlPeers.properties	Fri Jun 05 11:13:34 2009 +0100
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,3 +0,0 @@
-nextapp.echo.extras.app.IconSet                              nextapp.echo.extras.app.serial.property.IconSetPeer
-nextapp.echo.extras.app.layout.AccordionPaneLayoutData       nextapp.echo.extras.app.serial.property.AccordionPaneLayoutDataPeer
-nextapp.echo.extras.app.layout.TabPaneLayoutData             nextapp.echo.extras.app.serial.property.TabPaneLayoutDataPeer
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/META-INF/nextapp/echo/extras/Calendar_da.properties
--- a/build/server-java/app/META-INF/nextapp/echo/extras/Calendar_da.properties	Fri Jun 05 11:13:34 2009 +0100
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,27 +0,0 @@
-# Properties File for DateField Components: Danish
-
-Month0                                  Januar
-Month1                                  Februar
-Month2                                  Marts
-Month3                                  April
-Month4                                  Maj
-Month5                                  Juni
-Month6                                  Juli
-Month7                                  August
-Month8                                  September
-Month9                                  Oktober
-Month10                                 November
-Month11                                 December
-
-FirstDayOfWeek                          1
-
-# Day 0 indicates Sunday, regardless of FirstDayOfWeek setting.
-DayOfWeek0                              S\u00f8ndag
-DayOfWeek1                              Mandag
-DayOfWeek2                              Tirsdag
-DayOfWeek3                              Onsdag
-DayOfWeek4                              Torsdag
-DayOfWeek5                              Fredag
-DayOfWeek6                              L\u00f8rdag
-
-DisplayFormat                           %d %m %y
\ No newline at end of file
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/META-INF/nextapp/echo/extras/Calendar_de.properties
--- a/build/server-java/app/META-INF/nextapp/echo/extras/Calendar_de.properties	Fri Jun 05 11:13:34 2009 +0100
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,27 +0,0 @@
-# Properties File for DateField Components: German
-
-Month0                                  Januar
-Month1                                  Februar
-Month2                                  M\u00e4rz
-Month3                                  April
-Month4                                  Mai
-Month5                                  Juni
-Month6                                  Juli
-Month7                                  August
-Month8                                  September
-Month9                                  Oktober
-Month10                                 November
-Month11                                 Dezember
-
-FirstDayOfWeek                          1
-
-# Day 0 indicates Sunday, regardless of FirstDayOfWeek setting.
-DayOfWeek0                              Sonntag
-DayOfWeek1                              Montag
-DayOfWeek2                              Dienstag
-DayOfWeek3                              Mittwoch
-DayOfWeek4                              Donnerstag
-DayOfWeek5                              Freitag
-DayOfWeek6                              Samstag
-
-DisplayFormat                           %d %m %y
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/META-INF/nextapp/echo/extras/Calendar_el.properties
--- a/build/server-java/app/META-INF/nextapp/echo/extras/Calendar_el.properties	Fri Jun 05 11:13:34 2009 +0100
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,27 +0,0 @@
-# Properties File for DateField Components: Greek
-
-Month0 \u0399\u03b1\u03bd\u03bf\u03c5\u03ac\u03c1\u03b9\u03bf\u03c2
-Month1 \u03a6\u03b5\u03b2\u03c1\u03bf\u03c5\u03ac\u03c1\u03b9\u03bf\u03c2
-Month2 \u039c\u03ac\u03c1\u03c4\u03b9\u03bf\u03c2
-Month3 \u0391\u03c0\u03c1\u03af\u03bb\u03b9\u03bf\u03c2
-Month4 \u039c\u03ac\u03b9\u03bf\u03c2
-Month5 \u0399\u03bf\u03cd\u03bd\u03b9\u03bf\u03c2
-Month6 \u0399\u03bf\u03cd\u03bb\u03b9\u03bf\u03c2
-Month7 \u0391\u03cd\u03b3\u03bf\u03c5\u03c3\u03c4\u03bf\u03c2
-Month8 \u03a3\u03b5\u03c0\u03c4\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2
-Month9 \u039f\u03ba\u03c4\u03ce\u03b2\u03c1\u03b9\u03bf\u03c2
-Month10 \u039d\u03bf\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2
-Month11 \u0394\u03b5\u03ba\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2
-
-FirstDayOfWeek 1
-
-# Day 0 indicates Sunday, regardless of FirstDayOfWeek setting.
-DayOfWeek0 \u039a\u03c5\u03c1\u03b9\u03b1\u03ba\u03ae
-DayOfWeek1 \u0394\u03b5\u03c5\u03c4\u03ad\u03c1\u03b1
-DayOfWeek2 \u03a4\u03c1\u03af\u03c4\u03b7
-DayOfWeek3 \u03a4\u03b5\u03c4\u03ac\u03c1\u03c4\u03b7
-DayOfWeek4 \u03a0\u03ad\u03bc\u03c0\u03c4\u03b7
-DayOfWeek5 \u03a0\u03b1\u03c1\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae
-DayOfWeek6 \u03a3\u03ac\u03b2\u03b2\u03b1\u03c4\u03bf
-
-DisplayFormat %d %m %y
\ No newline at end of file
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/META-INF/nextapp/echo/extras/Calendar_es.properties
--- a/build/server-java/app/META-INF/nextapp/echo/extras/Calendar_es.properties	Fri Jun 05 11:13:34 2009 +0100
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,27 +0,0 @@
-# Properties File for DateField Components: Italian
-
-Month0                                  Enero 
-Month1                                  Febrero
-Month2                                  Marcha
-Month3                                  Abril
-Month4                                  Puede
-Month5                                  Junio
-Month6                                  Julio
-Month7                                  Agosto
-Month8                                  Septiembre
-Month9                                  Octubre
-Month10                                 Noviembre
-Month11                                 Diciembre
-
-FirstDayOfWeek                          1
-
-# Day 0 indicates Sunday, regardless of FirstDayOfWeek setting.
-DayOfWeek0                              Domingo
-DayOfWeek1                              Lunes
-DayOfWeek2                              Martes
-DayOfWeek3                              Mi\u00e9rcoles
-DayOfWeek4                              Jueves
-DayOfWeek5                              Viernes
-DayOfWeek6                              S\u00e1bado
-
-DisplayFormat                           %d %m %y
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/META-INF/nextapp/echo/extras/Calendar_fr.properties
--- a/build/server-java/app/META-INF/nextapp/echo/extras/Calendar_fr.properties	Fri Jun 05 11:13:34 2009 +0100
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,27 +0,0 @@
-# Properties File for DateField Components: French
-
-Month0                                  Janvier
-Month1                                  F\u00e9vrier
-Month2                                  Mars
-Month3                                  Avril
-Month4                                  Mai
-Month5                                  Juin
-Month6                                  Juillet
-Month7                                  Ao\u00fbt
-Month8                                  Septembre
-Month9                                  Octobre
-Month10                                 Novembre
-Month11                                 D\u00e9cembre
-
-FirstDayOfWeek                          1
-
-# Day 0 indicates Sunday, regardless of FirstDayOfWeek setting.
-DayOfWeek0                              Dimanche
-DayOfWeek1                              Lundi
-DayOfWeek2                              Mardi
-DayOfWeek3                              Mercredi
-DayOfWeek4                              Jeudi
-DayOfWeek5                              Vendredi
-DayOfWeek6                              Samedi
-
-DisplayFormat                           %d %m %y
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/META-INF/nextapp/echo/extras/Calendar_it.properties
--- a/build/server-java/app/META-INF/nextapp/echo/extras/Calendar_it.properties	Fri Jun 05 11:13:34 2009 +0100
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,27 +0,0 @@
-# Properties File for DateField Components: Italian
-
-Month0                                  Gennaio 
-Month1                                  Febbraio
-Month2                                  Marzo
-Month3                                  Aprile
-Month4                                  Pu\u00f2
-Month5                                  Giugno
-Month6                                  Luglio
-Month7                                  Agosto
-Month8                                  Settembre
-Month9                                  Ottobre
-Month10                                 Novembre
-Month11                                 Dicembre
-
-FirstDayOfWeek                          1
-
-# Day 0 indicates Sunday, regardless of FirstDayOfWeek setting.
-DayOfWeek0                              Domenica
-DayOfWeek1                              Luned\u00ec
-DayOfWeek2                              Marted\u00ec
-DayOfWeek3                              Mercoled\u00ec
-DayOfWeek4                              Gioved\u00ec
-DayOfWeek5                              Venerd\u00ec
-DayOfWeek6                              Sabato
-
-DisplayFormat                           %d %m %y
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/AccordionPane.class
Binary file build/server-java/app/nextapp/echo/extras/app/AccordionPane.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/BorderPane.class
Binary file build/server-java/app/nextapp/echo/extras/app/BorderPane.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/CalendarSelect.class
Binary file build/server-java/app/nextapp/echo/extras/app/CalendarSelect.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/ColorSelect.class
Binary file build/server-java/app/nextapp/echo/extras/app/ColorSelect.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/ContextMenu.class
Binary file build/server-java/app/nextapp/echo/extras/app/ContextMenu.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/DataGrid$1.class
Binary file build/server-java/app/nextapp/echo/extras/app/DataGrid$1.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/DataGrid$EmptyDataGridModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/DataGrid$EmptyDataGridModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/DataGrid.class
Binary file build/server-java/app/nextapp/echo/extras/app/DataGrid.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/DefaultIconSet.class
Binary file build/server-java/app/nextapp/echo/extras/app/DefaultIconSet.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/DragSource.class
Binary file build/server-java/app/nextapp/echo/extras/app/DragSource.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/DropDownMenu$1.class
Binary file build/server-java/app/nextapp/echo/extras/app/DropDownMenu$1.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/DropDownMenu.class
Binary file build/server-java/app/nextapp/echo/extras/app/DropDownMenu.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/Group.class
Binary file build/server-java/app/nextapp/echo/extras/app/Group.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/IconSet.class
Binary file build/server-java/app/nextapp/echo/extras/app/IconSet.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/MenuBarPane.class
Binary file build/server-java/app/nextapp/echo/extras/app/MenuBarPane.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/RichTextArea$1.class
Binary file build/server-java/app/nextapp/echo/extras/app/RichTextArea$1.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/RichTextArea.class
Binary file build/server-java/app/nextapp/echo/extras/app/RichTextArea.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/TabPane.class
Binary file build/server-java/app/nextapp/echo/extras/app/TabPane.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/ToolTipContainer.class
Binary file build/server-java/app/nextapp/echo/extras/app/ToolTipContainer.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/TransitionPane.class
Binary file build/server-java/app/nextapp/echo/extras/app/TransitionPane.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/Tree$1.class
Binary file build/server-java/app/nextapp/echo/extras/app/Tree$1.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/Tree$2.class
Binary file build/server-java/app/nextapp/echo/extras/app/Tree$2.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/Tree$3.class
Binary file build/server-java/app/nextapp/echo/extras/app/Tree$3.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/Tree$4.class
Binary file build/server-java/app/nextapp/echo/extras/app/Tree$4.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/Tree$Renderer.class
Binary file build/server-java/app/nextapp/echo/extras/app/Tree$Renderer.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/Tree$TreeSelectionModelListener.class
Binary file build/server-java/app/nextapp/echo/extras/app/Tree$TreeSelectionModelListener.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/Tree.class
Binary file build/server-java/app/nextapp/echo/extras/app/Tree.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/datagrid/AbstractDataGridModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/datagrid/AbstractDataGridModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/datagrid/DataGridModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/datagrid/DataGridModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/datagrid/PrefetchDataGridModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/datagrid/PrefetchDataGridModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/event/DataGridModelEvent.class
Binary file build/server-java/app/nextapp/echo/extras/app/event/DataGridModelEvent.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/event/DataGridModelListener.class
Binary file build/server-java/app/nextapp/echo/extras/app/event/DataGridModelListener.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/event/DropEvent.class
Binary file build/server-java/app/nextapp/echo/extras/app/event/DropEvent.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/event/DropListener.class
Binary file build/server-java/app/nextapp/echo/extras/app/event/DropListener.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/event/TabClosingEvent.class
Binary file build/server-java/app/nextapp/echo/extras/app/event/TabClosingEvent.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/event/TabClosingListener.class
Binary file build/server-java/app/nextapp/echo/extras/app/event/TabClosingListener.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/event/TabSelectionEvent.class
Binary file build/server-java/app/nextapp/echo/extras/app/event/TabSelectionEvent.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/event/TabSelectionListener.class
Binary file build/server-java/app/nextapp/echo/extras/app/event/TabSelectionListener.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/event/TreeColumnModelEvent.class
Binary file build/server-java/app/nextapp/echo/extras/app/event/TreeColumnModelEvent.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/event/TreeColumnModelListener.class
Binary file build/server-java/app/nextapp/echo/extras/app/event/TreeColumnModelListener.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/event/TreeExpansionEvent.class
Binary file build/server-java/app/nextapp/echo/extras/app/event/TreeExpansionEvent.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/event/TreeExpansionListener.class
Binary file build/server-java/app/nextapp/echo/extras/app/event/TreeExpansionListener.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/event/TreeModelEvent.class
Binary file build/server-java/app/nextapp/echo/extras/app/event/TreeModelEvent.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/event/TreeModelListener.class
Binary file build/server-java/app/nextapp/echo/extras/app/event/TreeModelListener.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/event/package.html
--- a/build/server-java/app/nextapp/echo/extras/app/event/package.html	Fri Jun 05 11:13:34 2009 +0100
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,18 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
-<html>
-<head>
-
-</head>
-<body bgcolor="white">
-
-Provides event and listener objcets.
-
-<h2>Related Documentation</h2>
-
-For more information please see:
-<ul>
-<li><a href="http://echo.nextapp.com/site/echo3">Echo Home Page</a>
-</ul>
-
-</body>
-</html>
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/layout/AccordionPaneLayoutData.class
Binary file build/server-java/app/nextapp/echo/extras/app/layout/AccordionPaneLayoutData.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/layout/TabPaneLayoutData$1.class
Binary file build/server-java/app/nextapp/echo/extras/app/layout/TabPaneLayoutData$1.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/layout/TabPaneLayoutData$Data.class
Binary file build/server-java/app/nextapp/echo/extras/app/layout/TabPaneLayoutData$Data.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/layout/TabPaneLayoutData.class
Binary file build/server-java/app/nextapp/echo/extras/app/layout/TabPaneLayoutData.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/layout/package.html
--- a/build/server-java/app/nextapp/echo/extras/app/layout/package.html	Fri Jun 05 11:13:34 2009 +0100
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,18 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
-<html>
-<head>
-
-</head>
-<body bgcolor="white">
-
-Provides <code>LayoutData</code> implementations for Extras <code>Component</code>s.
-
-<h2>Related Documentation</h2>
-
-For more information please see:
-<ul>
-<li><a href="http://echo.nextapp.com/site/echo3">Echo Home Page</a>
-</ul>
-
-</body>
-</html>
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/menu/AbstractMenuComponent$1.class
Binary file build/server-java/app/nextapp/echo/extras/app/menu/AbstractMenuComponent$1.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/menu/AbstractMenuComponent.class
Binary file build/server-java/app/nextapp/echo/extras/app/menu/AbstractMenuComponent.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/menu/AbstractMenuSelectionModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/menu/AbstractMenuSelectionModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/menu/AbstractMenuStateModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/menu/AbstractMenuStateModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/menu/DefaultMenuModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/menu/DefaultMenuModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/menu/DefaultMenuSelectionModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/menu/DefaultMenuSelectionModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/menu/DefaultMenuStateModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/menu/DefaultMenuStateModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/menu/DefaultOptionModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/menu/DefaultOptionModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/menu/DefaultRadioOptionModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/menu/DefaultRadioOptionModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/menu/DefaultToggleOptionModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/menu/DefaultToggleOptionModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/menu/ItemModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/menu/ItemModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/menu/MenuModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/menu/MenuModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/menu/MenuSelectionModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/menu/MenuSelectionModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/menu/MenuStateModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/menu/MenuStateModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/menu/OptionModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/menu/OptionModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/menu/RadioOptionModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/menu/RadioOptionModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/menu/SeparatorModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/menu/SeparatorModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/menu/ToggleOptionModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/menu/ToggleOptionModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/menu/package.html
--- a/build/server-java/app/nextapp/echo/extras/app/menu/package.html	Fri Jun 05 11:13:34 2009 +0100
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,18 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
-<html>
-<head>
-
-</head>
-<body bgcolor="white">
-
-Provides menu model and menu selection model objects used by the Extras menu components (e.g., <code>MenuBarPane</code>, <code>DropDownMenu</code> and <code>ContextMenu</code>).
-
-<h2>Related Documentation</h2>
-
-For more information please see:
-<ul>
-<li><a href="http://echo.nextapp.com/site/echo3">Echo Home Page</a>
-</ul>
-
-</body>
-</html>
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/overview.html
--- a/build/server-java/app/nextapp/echo/extras/app/overview.html	Fri Jun 05 11:13:34 2009 +0100
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,11 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
-<html>
-<head>
-
-</head>
-<body bgcolor="white">
-
-This document is the API specification for the Echo3 Extras Component Library.
-
-</body>
-</html>
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/package.html
--- a/build/server-java/app/nextapp/echo/extras/app/package.html	Fri Jun 05 11:13:34 2009 +0100
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,18 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
-<html>
-<head>
-
-</head>
-<body bgcolor="white">
-
-Provides the core classes and <code>Component</code>s of the Extras library.
-
-<h2>Related Documentation</h2>
-
-For more information please see:
-<ul>
-<li><a href="http://echo.nextapp.com/site/echo3">Echo Home Page</a>
-</ul>
-
-</body>
-</html>
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/resource/image/TreeFolder.gif
Binary file build/server-java/app/nextapp/echo/extras/app/resource/image/TreeFolder.gif has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/resource/image/TreeLeaf.gif
Binary file build/server-java/app/nextapp/echo/extras/app/resource/image/TreeLeaf.gif has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/serial/property/AccordionPaneLayoutDataPeer.class
Binary file build/server-java/app/nextapp/echo/extras/app/serial/property/AccordionPaneLayoutDataPeer.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/serial/property/IconSetPeer.class
Binary file build/server-java/app/nextapp/echo/extras/app/serial/property/IconSetPeer.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/serial/property/ItemModelPeer.class
Binary file build/server-java/app/nextapp/echo/extras/app/serial/property/ItemModelPeer.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/serial/property/SerialPropertyPeerConstants.class
Binary file build/server-java/app/nextapp/echo/extras/app/serial/property/SerialPropertyPeerConstants.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/serial/property/TabPaneLayoutDataPeer.class
Binary file build/server-java/app/nextapp/echo/extras/app/serial/property/TabPaneLayoutDataPeer.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/serial/property/package.html
--- a/build/server-java/app/nextapp/echo/extras/app/serial/property/package.html	Fri Jun 05 11:13:34 2009 +0100
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,18 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
-<html>
-<head>
-
-</head>
-<body bgcolor="white">
-
-Provides peers to serialize Extras-specific property types to and from XML.
-
-<h2>Related Documentation</h2>
-
-For more information please see:
-<ul>
-<li><a href="http://echo.nextapp.com/site/echo3">Echo Home Page</a>
-</ul>
-
-</body>
-</html>
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/tree/AbstractTreeModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/tree/AbstractTreeModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/tree/DefaultTreeCellRenderer.class
Binary file build/server-java/app/nextapp/echo/extras/app/tree/DefaultTreeCellRenderer.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/tree/DefaultTreeColumnModel$1.class
Binary file build/server-java/app/nextapp/echo/extras/app/tree/DefaultTreeColumnModel$1.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/tree/DefaultTreeColumnModel$ColumnChangeForwarder.class
Binary file build/server-java/app/nextapp/echo/extras/app/tree/DefaultTreeColumnModel$ColumnChangeForwarder.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/tree/DefaultTreeColumnModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/tree/DefaultTreeColumnModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/tree/DefaultTreeSelectionModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/tree/DefaultTreeSelectionModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/tree/TreeCellRenderer.class
Binary file build/server-java/app/nextapp/echo/extras/app/tree/TreeCellRenderer.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/tree/TreeColumn.class
Binary file build/server-java/app/nextapp/echo/extras/app/tree/TreeColumn.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/tree/TreeColumnModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/tree/TreeColumnModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/tree/TreeLayoutData.class
Binary file build/server-java/app/nextapp/echo/extras/app/tree/TreeLayoutData.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/tree/TreeModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/tree/TreeModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/tree/TreePath.class
Binary file build/server-java/app/nextapp/echo/extras/app/tree/TreePath.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/tree/TreeSelectionModel.class
Binary file build/server-java/app/nextapp/echo/extras/app/tree/TreeSelectionModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/app/nextapp/echo/extras/app/tree/package.html
--- a/build/server-java/app/nextapp/echo/extras/app/tree/package.html	Fri Jun 05 11:13:34 2009 +0100
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,18 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
-<html>
-<head>
-
-</head>
-<body bgcolor="white">
-
-Provides model and selection model objects used by the <code>Tree</code> component.
-
-<h2>Related Documentation</h2>
-
-For more information please see:
-<ul>
-<li><a href="http://echo.nextapp.com/site/echo3">Echo Home Page</a>
-</ul>
-
-</body>
-</html>
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/webcontainer/nextapp/echo/extras/webcontainer/CommonResources.class
Binary file build/server-java/webcontainer/nextapp/echo/extras/webcontainer/CommonResources.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/webcontainer/nextapp/echo/extras/webcontainer/service/CommonService.class
Binary file build/server-java/webcontainer/nextapp/echo/extras/webcontainer/service/CommonService.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/AbstractMenuPeer$1.class
Binary file build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/AbstractMenuPeer$1.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/AbstractMenuPeer$RenderedMenuStateModel.class
Binary file build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/AbstractMenuPeer$RenderedMenuStateModel.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/AbstractMenuPeer$RenderedMenuStateModelPropertyPeer.class
Binary file build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/AbstractMenuPeer$RenderedMenuStateModelPropertyPeer.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/AbstractMenuPeer.class
Binary file build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/AbstractMenuPeer.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/AccordionPanePeer$1.class
Binary file build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/AccordionPanePeer$1.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/AccordionPanePeer.class
Binary file build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/AccordionPanePeer.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/BorderPanePeer.class
Binary file build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/BorderPanePeer.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/CalendarSelectPeer.class
Binary file build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/CalendarSelectPeer.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/ColorSelectPeer.class
Binary file build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/ColorSelectPeer.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/ContextMenuPeer.class
Binary file build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/ContextMenuPeer.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/DataGridPeer$1.class
Binary file build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/DataGridPeer$1.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/DataGridPeer$ModelData.class
Binary file build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/DataGridPeer$ModelData.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/DataGridPeer$ModelDataPeer.class
Binary file build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/DataGridPeer$ModelDataPeer.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/DataGridPeer.class
Binary file build/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/DataGridPeer.class has changed
diff -r e83dcf3e7e78 -r 37487d3f651b dist/lib/Echo3_Extras_App.jar
Binary file dist/lib/Echo3_Extras_App.jar has changed
diff -r e83dcf3e7e78 -r 37487d3f651b src/server-java/app/nextapp/echo/extras/app/Tree.java
--- a/src/server-java/app/nextapp/echo/extras/app/Tree.java	Fri Jun 05 11:13:34 2009 +0100
+++ b/src/server-java/app/nextapp/echo/extras/app/Tree.java	Mon Oct 05 16:01:53 2009 +0100
@@ -79,15 +79,15 @@
  */
 public class Tree extends Component {
 
-    private class Renderer 
+    protected class Renderer 
     implements Serializable {
 
         private int columnCount;
-        private int row;
+        protected int row;
         private TreeColumn[] treeColumns;
         private TreeCellRenderer[] columnRenderers;
 
-        private void doRender() {
+        protected void doRender() {
             Object root = model.getRoot();
             if (isHeaderVisible()) {
                 renderHeader();
@@ -95,7 +95,7 @@
             doRenderNode(new TreePath(root));
         }
         
-        private void init() {
+        protected void init() {
             columnCount = columnModel.getColumnCount();
             
             treeColumns = new TreeColumn[columnCount];
@@ -119,7 +119,7 @@
             }
         }
         
-        private void renderHeader() {
+        protected void renderHeader() {
             for (int columnIndex = 0; columnIndex < columnCount; ++columnIndex) {
                 int modelColumnIndex = treeColumns[columnIndex].getModelIndex();
                 Object headerValue = treeColumns[columnIndex].getHeaderValue();
@@ -143,7 +143,7 @@
             }
         }
 
-        private void doRenderNode(TreePath treePath) {
+        protected void doRenderNode(TreePath treePath) {
             Object value = treePath.getLastPathComponent();
             if (!treePathToComponentCache.containsKey(treePath)) {
                 renderNodeComponents(treePath);
@@ -163,7 +163,7 @@
             }
         }
         
-        private void renderNodeComponents(TreePath treePath) {
+        protected void renderNodeComponents(TreePath treePath) {
             Object node = treePath.getLastPathComponent();
             
             boolean leaf = model.getChildCount(node) == 0;
@@ -180,7 +180,7 @@
             }
         }
         
-        private void cacheComponent(TreePath treePath, int column, Component component) {
+        protected void cacheComponent(TreePath treePath, int column, Component component) {
             if (1 == columnCount) {
                 treePathToComponentCache.put(treePath, component);
             } else {
@@ -195,7 +195,7 @@
             }
         }
 
-        void update(TreePath path, boolean newState) {
+        protected void update(TreePath path, boolean newState) {
             init();
             row = getRowForPath(path);
             if (row == -1) {
@@ -208,7 +208,7 @@
             }
         }
 
-        private void doCollapse(TreePath path) {
+        protected void doCollapse(TreePath path) {
             Object value = path.getLastPathComponent();
 
             if (model.getChildCount(value) == 0) {
@@ -230,7 +230,7 @@
             }
         }
 
-        private TreePath getSiblingPath(TreePath path) {
+        protected TreePath getSiblingPath(TreePath path) {
             TreePath parentPath = path.getParentPath();
             if (parentPath == null) {
                 return null;
@@ -246,7 +246,7 @@
             }
         }
 
-        void fullUpdate() {
+        protected void fullUpdate() {
             init();
             removeAll();
             treePathToComponentCache.clear();
@@ -256,7 +256,7 @@
         }
     }
 
-    private Renderer renderer = new Renderer();
+    private Renderer renderer = createRenderer();
 
     public static final String PROPERTY_ACTION_COMMAND = "actionCommand";
     public static final String PROPERTY_BORDER = "border";
@@ -429,8 +429,8 @@
     private Map defaultRendererMap = new HashMap();
     private TreeCellRenderer defaultHeaderRenderer;
     private Set expandedPaths = new HashSet();
-    private List rowToTreePathCache = new ArrayList();
-    private Map treePathToComponentCache = new HashMap();
+    protected List rowToTreePathCache = new ArrayList();
+    protected Map treePathToComponentCache = new HashMap();
     private boolean valid = false;
     private TreeCellRenderer cellRenderer;
     private boolean autoCreateColumnsFromModel;
@@ -473,7 +473,11 @@
         });
     }
     
-    /**
+    protected Renderer createRenderer() {
+		return new Renderer();
+	}
+
+	/**
      * Constructs a new <code>Tree</code> with the specified model.
      * <p>
      * If the model has a root node, it will be expanded by default.
diff -r e83dcf3e7e78 -r 37487d3f651b src/server-java/webcontainer/META-INF/nextapp/echo/SynchronizePeerBindings.properties
--- a/src/server-java/webcontainer/META-INF/nextapp/echo/SynchronizePeerBindings.properties	Fri Jun 05 11:13:34 2009 +0100
+++ b/src/server-java/webcontainer/META-INF/nextapp/echo/SynchronizePeerBindings.properties	Mon Oct 05 16:01:53 2009 +0100
@@ -23,8 +23,8 @@
 
 nextapp.echo.extras.app.layout.AccordionPaneLayoutData      nextapp.echo.extras.app.serial.property.AccordionPaneLayoutDataPeer
 nextapp.echo.extras.app.layout.TabPaneLayoutData            nextapp.echo.extras.app.serial.property.TabPaneLayoutDataPeer
-nextapp.echo.extras.webcontainer.sync.component.TreePeer$TreeStructure \
-                                             nextapp.echo.extras.webcontainer.sync.component.TreePeer$TreeStructurePeer
+nextapp.echo.extras.webcontainer.sync.component.tree.TreeStructure \
+                                             nextapp.echo.extras.webcontainer.sync.component.tree.TreeStructurePeer
 nextapp.echo.extras.webcontainer.sync.component.TreePeer$TreeSelectionUpdate \
                                              nextapp.echo.extras.webcontainer.sync.component.TreePeer$TreeSelectionUpdatePeer
 nextapp.echo.extras.webcontainer.sync.component.DataGridPeer$ModelData \
diff -r e83dcf3e7e78 -r 37487d3f651b src/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/TreePeer.java
--- a/src/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/TreePeer.java	Fri Jun 05 11:13:34 2009 +0100
+++ b/src/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/TreePeer.java	Mon Oct 05 16:01:53 2009 +0100
@@ -55,6 +55,8 @@
 import nextapp.echo.extras.app.tree.TreeSelectionModel;
 import nextapp.echo.extras.webcontainer.CommonResources;
 import nextapp.echo.extras.webcontainer.service.CommonService;
+import nextapp.echo.extras.webcontainer.sync.component.tree.TreeRenderState;
+import nextapp.echo.extras.webcontainer.sync.component.tree.TreeStructure;
 import nextapp.echo.webcontainer.AbstractComponentSynchronizePeer;
 import nextapp.echo.webcontainer.ContentType;
 import nextapp.echo.webcontainer.RenderState;
@@ -118,317 +120,6 @@
         
     }
     
-    /**
-     * Holds the state of the client side tree.
-     */
-    private static class TreeRenderState 
-    implements RenderState {
-        private static final long serialVersionUID = 1L;
-        /**
-         * Holds all paths that are sent down to the client. When a path has children it
-         * is only added to this set if all it's children are sent down too.
-         */
-        private Set sentPaths = new HashSet();
-        /**
-         * Holds paths that are changed on the server since the last synchronization
-         */
-        private Set changedPaths = new HashSet();
-        /**
-         * Holds all selection paths that have not been sent to the client
-         */
-        private Set unsentSelections = new HashSet();
-        /**
-         * The path that changed the expansion state of as a result
-         * of a client update.
-         */
-        private TreePath clientPath;
-        /**
-         * Indicates whether a full render is necessary
-         */
-        private boolean fullRender = true;
-        private final Tree tree;
-        
-        /**
-         * Listens for changes in the expansion state. All changed paths are added
-         * to the <code>changedPaths</code> list.
-         */
-        private TreeExpansionListener expansionListener = new TreeExpansionListener() {
-            public void treeCollapsed(TreeExpansionEvent event) {
-                if (!event.getPath().equals(clientPath)) {
-                    changedPaths.add(event.getPath());
-                }
-            }
-            
-            public void treeExpanded(TreeExpansionEvent event) {
-                if (!event.getPath().equals(clientPath)) {
-                    changedPaths.add(event.getPath());
-                }
-            }
-        };
-        
-        public TreeRenderState(Tree tree) {
-            this.tree = tree;
-            tree.addTreeExpansionListener(expansionListener);
-        }
-        
-        public void setClientPath(TreePath path) {
-            this.clientPath = null;
-            if (isSent(path)) {
-                this.clientPath = path;
-            }
-        }
-        
-        public boolean isFullRender() {
-            return fullRender;
-        }
-        
-        public void setFullRender(boolean newValue) {
-            fullRender = newValue;
-        }
-        
-        public void addSentPath(TreePath path) {
-            sentPaths.add(path);
-        }
-        
-        public void removeSentPath(TreePath path) {
-            sentPaths.remove(path);
-        }
-        
-        public boolean isSent(TreePath path) {
-            return sentPaths.contains(path);
-        }
-        
-        /**
-         * Returns all paths of which the expansion state has been changed since
-         * the last synchronization. The paths are sorted by row index.
-         * 
-         * @return all paths that are changed since last synchronization
-         */
-        public Iterator changedPaths() {
-            ArrayList list = new ArrayList(changedPaths);
-            Collections.sort(list, new Comparator() {
-                public int compare(Object obj1, Object obj2) {
-                    TreePath path1 = (TreePath) obj1;
-                    TreePath path2 = (TreePath) obj2;
-                    if (path1 == path2 || path1.equals(path2)) {
-                        return 0;
-                    }
-                    int path1Count = path1.getPathCount();
-                    int path2Count = path2.getPathCount();
-                    if (path1Count == 1) { // path1 has only root element
-                        return -1;
-                    } else if (path2Count == 1) { // path2 has only root element
-                        return 1;
-                    }
-                    int end = Math.min(path1Count, path2Count);
-                    int i = 1;
-                    for (; i < end; i++) {
-                        Object comp1 = path1.getPathComponent(i);
-                        Object comp2 = path2.getPathComponent(i);
-                        if (comp1 != comp2) {
-                            return compareNodes(i, path1, path2);
-                        }
-                    }
-                    if (path1Count == i) { // path1 has only root element
-                        return -1;
-                    } else if (path2Count == i) { // path2 has only root element
-                        return 1;
-                    }
-                    return compareNodes(i, path1, path2);
-                }
-                
-                private int compareNodes(int index, TreePath path1, TreePath path2) {
-                    Object commonParent = path1.getPathComponent(index - 1);
-                    int index1 = tree.getModel().getIndexOfChild(commonParent, path1.getPathComponent(index));
-                    int index2 = tree.getModel().getIndexOfChild(commonParent, path2.getPathComponent(index));
-                    if (index1 < index2) {
-                        return -1;
-                    } else if (index1 > index2) {
-                        return 1;
-                    } else {
-                        return 0;
-                    }
-                }
-            });
-            return list.iterator();
-        }
-        
-        public void clearChangedPaths() {
-            clientPath = null;
-            changedPaths.clear();
-        }
-        
-        public boolean hasChangedPaths() {
-            return clientPath != null || !changedPaths.isEmpty();
-        }
-        
-        public boolean isPathChanged(TreePath path) {
-            return changedPaths.contains(path);
-        }
-        
-        public boolean hasUnsentSelections() {
-            return !unsentSelections.isEmpty();
-        }
-        
-        public void addUnsentSelection(TreePath path) {
-            unsentSelections.add(path);
-        }
-        
-        public void removeUnsentSelection(TreePath path) {
-            unsentSelections.remove(path);
-        }
-    }
-    
-    private class TreeStructure {
-        
-        Tree tree;
-        
-        TreeStructure(Tree tree) {
-            this.tree = tree;
-        }
-    }
-    
-    /**
-     * Uses TreeStructureRenderer to send down the current tree structure to the client.
-     */
-    public static class TreeStructurePeer 
-    implements SerialPropertyPeer {
-    
-        /**
-         * @see nextapp.echo.app.serial.SerialPropertyPeer#toProperty(nextapp.echo.app.util.Context, 
-         *      java.lang.Class, org.w3c.dom.Element)
-         */
-        public Object toProperty(Context context, Class objectClass, Element propertyElement) 
-        throws SerialException {
-            throw new UnsupportedOperationException();
-        }
-    
-        /**
-         * @see nextapp.echo.app.serial.SerialPropertyPeer#toXml(nextapp.echo.app.util.Context, 
-         *      java.lang.Class, org.w3c.dom.Element, java.lang.Object)
-         */
-        public void toXml(Context context, Class objectClass, Element propertyElement, Object propertyValue) 
-        throws SerialException {
-            Tree tree = ((TreeStructure) propertyValue).tree;
-            TreeStructureRenderer renderer = new TreeStructureRenderer(propertyElement, tree);
-            propertyElement.setAttribute("t", SerialPropertyPeerConstants.PROPERTY_TYPE_PREFIX + "TreeStructure");
-            Window containingWindow = tree.getContainingWindow();
-            TreeRenderState renderState = (TreeRenderState) containingWindow.getRenderState(tree);
-            if (renderState == null) {
-                renderState = new TreeRenderState(tree);
-                containingWindow.setRenderState(tree, renderState);
-            }
-            renderer.render(context, renderState);
-            renderState.clearChangedPaths();
-        }
-    }
-    
-    /**
-     * Sends down the tree structure to the client. If a render state exists and a full render
-     * is not required, an update will be sent.
-     */
-    private static class TreeStructureRenderer {
-        private Tree tree;
-        private TreeModel model;
-        private int columnCount;
-        private Element propertyElement;
-        private Document document;
-        private Set renderedPaths = new HashSet();
-        private TreeRenderState renderState;
-        
-        TreeStructureRenderer(Element propertyElement, Tree tree) {
-            this.propertyElement = propertyElement;
-            document = propertyElement.getOwnerDocument();
-            this.tree = tree;
-            columnCount = getColumnCount(tree);
-            model = tree.getModel();
-        }
-        
-        private void render(Context context, TreeRenderState renderState) {
-            this.renderState = renderState;
-            if (renderState.isFullRender()) {
-                if (tree.isHeaderVisible()) {
-                    // header
-                    renderNode(context, null, null, false);
-                }
-                Object value = model.getRoot();
-                renderNode(context, value, new TreePath(value), true);
-                renderState.setFullRender(false);
-                propertyElement.setAttribute("fr", "1");
-            } else if (renderState.hasChangedPaths()) {
-                for (Iterator iterator = renderState.changedPaths(); iterator.hasNext();) {
-                    TreePath path = (TreePath) iterator.next();
-                    renderNode(context, path.getLastPathComponent(), path, true);
-                    renderedPaths.add(path);
-                }
-            }
-        }
-        
-        private void renderNode(Context context, Object value, TreePath path, boolean root) {
-            if (renderedPaths.contains(path)) {
-                return;
-            }
-            if (renderState.isSent(path) && !renderState.isPathChanged(path)) {
-                return;
-            }
-            
-            UserInstance userInstance = (UserInstance) context.get(UserInstance.class);
-            
-            renderedPaths.add(path);
-            Component component = tree.getComponent(path, 0);
-            boolean expanded = tree.isExpanded(path);
-            String id = userInstance.getClientRenderId(component);
-            Element eElement = document.createElement("e");
-            eElement.setAttribute("i", id);
-            if (path != null) {
-                TreePath parentPath = path.getParentPath();
-                if (parentPath != null) {
-                    eElement.setAttribute("p", userInstance.getClientRenderId(tree.getComponent(parentPath, 0)));
-                }
-            }
-            boolean leaf = value != null && model.isLeaf(value);
-            if (path == null) {
-                eElement.setAttribute("h", "1");
-            } else {
-                if (expanded) {
-                    eElement.setAttribute("ex", "1");
-                } else {
-                    if (leaf) {
-                        eElement.setAttribute("l", "1");
-                    }
-                }
-                if (root) {
-                    eElement.setAttribute("r", "1");
-                }
-            }
-            
-            if (!renderState.isSent(path)) {
-                for (int i = 1; i < columnCount; ++i) {
-                    Component columnComponent = tree.getComponent(path, i);
-                    Element columnElement = document.createElement("c");
-                    columnElement.setAttribute("i", userInstance.getClientRenderId(columnComponent));
-                    eElement.appendChild(columnElement);
-                }
-            }
-            
-            propertyElement.appendChild(eElement);
-            
-            if (value == null) {
-                return;
-            }
-            if (expanded) {
-                int childCount = model.getChildCount(value);
-                for (int i = 0; i < childCount; ++i) {
-                    Object childValue = model.getChild(value, i);
-                    renderNode(context, childValue, path.pathByAddingChild(childValue), false);
-                }
-            }
-            if (expanded || leaf) {
-                renderState.addSentPath(path);
-            }
-        }
-    }
-    
     private static int getColumnCount(Tree tree) {
         return tree.getColumnModel().getColumnCount();
     }
diff -r e83dcf3e7e78 -r 37487d3f651b src/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/tree/TreeRenderState.java
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/src/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/tree/TreeRenderState.java	Mon Oct 05 16:01:53 2009 +0100
@@ -0,0 +1,174 @@
+package nextapp.echo.extras.webcontainer.sync.component.tree;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.Comparator;
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.Set;
+
+import nextapp.echo.extras.app.Tree;
+import nextapp.echo.extras.app.event.TreeExpansionEvent;
+import nextapp.echo.extras.app.event.TreeExpansionListener;
+import nextapp.echo.extras.app.tree.TreePath;
+import nextapp.echo.webcontainer.RenderState;
+
+/**
+ * Holds the state of the client side tree.
+ */
+public class TreeRenderState implements RenderState {
+    private static final long serialVersionUID = 1L;
+    /**
+     * Holds all paths that are sent down to the client. When a path has children it
+     * is only added to this set if all it's children are sent down too.
+     */
+    private Set sentPaths = new HashSet();
+    /**
+     * Holds paths that are changed on the server since the last synchronization
+     */
+    private Set changedPaths = new HashSet();
+    /**
+     * Holds all selection paths that have not been sent to the client
+     */
+    private Set unsentSelections = new HashSet();
+    /**
+     * The path that changed the expansion state of as a result
+     * of a client update.
+     */
+    private TreePath clientPath;
+    /**
+     * Indicates whether a full render is necessary
+     */
+    private boolean fullRender = true;
+    private final Tree tree;
+    
+    /**
+     * Listens for changes in the expansion state. All changed paths are added
+     * to the <code>changedPaths</code> list.
+     */
+    private TreeExpansionListener expansionListener = new TreeExpansionListener() {
+        public void treeCollapsed(TreeExpansionEvent event) {
+            if (!event.getPath().equals(clientPath)) {
+                changedPaths.add(event.getPath());
+            }
+        }
+        
+        public void treeExpanded(TreeExpansionEvent event) {
+            if (!event.getPath().equals(clientPath)) {
+                changedPaths.add(event.getPath());
+            }
+        }
+    };
+    
+    public TreeRenderState(Tree tree) {
+        this.tree = tree;
+        tree.addTreeExpansionListener(expansionListener);
+    }
+    
+    public void setClientPath(TreePath path) {
+        this.clientPath = null;
+        if (isSent(path)) {
+            this.clientPath = path;
+        }
+    }
+    
+    public boolean isFullRender() {
+        return fullRender;
+    }
+    
+    public void setFullRender(boolean newValue) {
+        fullRender = newValue;
+    }
+    
+    public void addSentPath(TreePath path) {
+        sentPaths.add(path);
+    }
+    
+    public void removeSentPath(TreePath path) {
+        sentPaths.remove(path);
+    }
+    
+    public boolean isSent(TreePath path) {
+        return sentPaths.contains(path);
+    }
+    
+    /**
+     * Returns all paths of which the expansion state has been changed since
+     * the last synchronization. The paths are sorted by row index.
+     * 
+     * @return all paths that are changed since last synchronization
+     */
+    public Iterator changedPaths() {
+        ArrayList list = new ArrayList(changedPaths);
+        Collections.sort(list, new Comparator() {
+            public int compare(Object obj1, Object obj2) {
+                TreePath path1 = (TreePath) obj1;
+                TreePath path2 = (TreePath) obj2;
+                if (path1 == path2 || path1.equals(path2)) {
+                    return 0;
+                }
+                int path1Count = path1.getPathCount();
+                int path2Count = path2.getPathCount();
+                if (path1Count == 1) { // path1 has only root element
+                    return -1;
+                } else if (path2Count == 1) { // path2 has only root element
+                    return 1;
+                }
+                int end = Math.min(path1Count, path2Count);
+                int i = 1;
+                for (; i < end; i++) {
+                    Object comp1 = path1.getPathComponent(i);
+                    Object comp2 = path2.getPathComponent(i);
+                    if (comp1 != comp2) {
+                        return compareNodes(i, path1, path2);
+                    }
+                }
+                if (path1Count == i) { // path1 has only root element
+                    return -1;
+                } else if (path2Count == i) { // path2 has only root element
+                    return 1;
+                }
+                return compareNodes(i, path1, path2);
+            }
+            
+            private int compareNodes(int index, TreePath path1, TreePath path2) {
+                Object commonParent = path1.getPathComponent(index - 1);
+                int index1 = tree.getModel().getIndexOfChild(commonParent, path1.getPathComponent(index));
+                int index2 = tree.getModel().getIndexOfChild(commonParent, path2.getPathComponent(index));
+                if (index1 < index2) {
+                    return -1;
+                } else if (index1 > index2) {
+                    return 1;
+                } else {
+                    return 0;
+                }
+            }
+        });
+        return list.iterator();
+    }
+    
+    public void clearChangedPaths() {
+        clientPath = null;
+        changedPaths.clear();
+    }
+    
+    public boolean hasChangedPaths() {
+        return clientPath != null || !changedPaths.isEmpty();
+    }
+    
+    public boolean isPathChanged(TreePath path) {
+        return changedPaths.contains(path);
+    }
+    
+    public boolean hasUnsentSelections() {
+        return !unsentSelections.isEmpty();
+    }
+    
+    public void addUnsentSelection(TreePath path) {
+        unsentSelections.add(path);
+    }
+    
+    public void removeUnsentSelection(TreePath path) {
+        unsentSelections.remove(path);
+    }
+}
diff -r e83dcf3e7e78 -r 37487d3f651b src/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/tree/TreeStructure.java
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/src/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/tree/TreeStructure.java	Mon Oct 05 16:01:53 2009 +0100
@@ -0,0 +1,16 @@
+package nextapp.echo.extras.webcontainer.sync.component.tree;
+
+import nextapp.echo.extras.app.Tree;
+
+public class TreeStructure {
+    
+    Tree tree;
+    
+    public TreeStructure(Tree tree) {
+        this.tree = tree;
+    }
+
+    public Tree getTree() {
+        return tree;
+    }
+}
diff -r e83dcf3e7e78 -r 37487d3f651b src/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/tree/TreeStructurePeer.java
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/src/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/tree/TreeStructurePeer.java	Mon Oct 05 16:01:53 2009 +0100
@@ -0,0 +1,46 @@
+package nextapp.echo.extras.webcontainer.sync.component.tree;
+
+import nextapp.echo.app.Window;
+import nextapp.echo.app.serial.SerialException;
+import nextapp.echo.app.serial.SerialPropertyPeer;
+import nextapp.echo.app.util.Context;
+import nextapp.echo.extras.app.Tree;
+import nextapp.echo.extras.app.serial.property.SerialPropertyPeerConstants;
+
+import org.w3c.dom.Element;
+
+public class TreeStructurePeer implements SerialPropertyPeer {
+    
+    /**
+     * @see nextapp.echo.app.serial.SerialPropertyPeer#toProperty(nextapp.echo.app.util.Context, 
+     *      java.lang.Class, org.w3c.dom.Element)
+     */
+    public Object toProperty(Context context, Class objectClass, Element propertyElement) 
+    throws SerialException {
+        throw new UnsupportedOperationException();
+    }
+
+    /**
+     * @see nextapp.echo.app.serial.SerialPropertyPeer#toXml(nextapp.echo.app.util.Context, 
+     *      java.lang.Class, org.w3c.dom.Element, java.lang.Object)
+     */
+    public void toXml(Context context, Class objectClass, Element propertyElement, Object propertyValue) 
+    throws SerialException {
+        Tree tree = ((TreeStructure) propertyValue).getTree();
+        TreeStructureRenderer renderer = getRenderer(context, objectClass, propertyElement, propertyValue);
+        propertyElement.setAttribute("t", SerialPropertyPeerConstants.PROPERTY_TYPE_PREFIX + "TreeStructure");
+        Window containingWindow = tree.getContainingWindow();
+        TreeRenderState renderState = (TreeRenderState) containingWindow.getRenderState(tree);
+        if (renderState == null) {
+            renderState = new TreeRenderState(tree);
+            containingWindow.setRenderState(tree, renderState);
+        }
+        renderer.render(context, renderState);
+        renderState.clearChangedPaths();
+    }
+    
+    protected TreeStructureRenderer getRenderer(Context context, Class objectClass, Element propertyElement, Object propertyValue) {
+        Tree tree = ((TreeStructure) propertyValue).getTree();
+        return new TreeStructureRenderer(propertyElement, tree);
+    }
+}
diff -r e83dcf3e7e78 -r 37487d3f651b src/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/tree/TreeStructureRenderer.java
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/src/server-java/webcontainer/nextapp/echo/extras/webcontainer/sync/component/tree/TreeStructureRenderer.java	Mon Oct 05 16:01:53 2009 +0100
@@ -0,0 +1,135 @@
+package nextapp.echo.extras.webcontainer.sync.component.tree;
+
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.Set;
+
+import nextapp.echo.app.Component;
+import nextapp.echo.app.util.Context;
+import nextapp.echo.extras.app.Tree;
+import nextapp.echo.extras.app.tree.TreeModel;
+import nextapp.echo.extras.app.tree.TreePath;
+import nextapp.echo.webcontainer.UserInstance;
+
+import org.w3c.dom.Document;
+import org.w3c.dom.Element;
+
+/**
+ * Sends down the tree structure to the client. If a render state exists and a full render
+ * is not required, an update will be sent.
+ */
+public class TreeStructureRenderer {
+    private Tree tree;
+    private TreeModel model;
+    private int columnCount;
+    private Element propertyElement;
+    private Document document;
+    private Set renderedPaths = new HashSet();
+    private TreeRenderState renderState;
+    
+    public TreeStructureRenderer(Element propertyElement, Tree tree) {
+        this.propertyElement = propertyElement;
+        document = propertyElement.getOwnerDocument();
+        this.tree = tree;
+        columnCount = getColumnCount(tree);
+        model = tree.getModel();
+    }
+    
+    public void render(Context context, TreeRenderState renderState) {
+        this.renderState = renderState;
+        if (renderState.isFullRender()) {
+            if (tree.isHeaderVisible()) {
+                // header
+                renderNode(context, null, null, false);
+            }
+            Object value = model.getRoot();
+            renderNode(context, value, new TreePath(value), true);
+            renderState.setFullRender(false);
+            propertyElement.setAttribute("fr", "1");
+        } else if (renderState.hasChangedPaths()) {
+            for (Iterator iterator = renderState.changedPaths(); iterator.hasNext();) {
+                TreePath path = (TreePath) iterator.next();
+                renderNode(context, path.getLastPathComponent(), path, true);
+                renderedPaths.add(path);
+            }
+        }
+    }
+    
+    protected void renderNode(Context context, Object value, TreePath path, boolean root) {
+        if (renderedPaths.contains(path)) {
+            return;
+        }
+        if (renderState.isSent(path) && !renderState.isPathChanged(path)) {
+            return;
+        }
+        
+        renderedPaths.add(path);
+        Component component = tree.getComponent(path, 0);
+
+        boolean expanded = tree.isExpanded(path);
+        boolean leaf = value != null && model.isLeaf(value);
+        Element eElement = doRenderNode(path, component, context, value, root);
+        
+        propertyElement.appendChild(eElement);
+        
+        if (value == null) {
+            return;
+        }
+        if (expanded) {
+            int childCount = model.getChildCount(value);
+            for (int i = 0; i < childCount; ++i) {
+                Object childValue = model.getChild(value, i);
+                renderNode(context, childValue, path.pathByAddingChild(childValue), false);
+            }
+        }
+        if (expanded || leaf) {
+            renderState.addSentPath(path);
+        }
+    }
+    
+    protected Element doRenderNode(TreePath path, Component component, Context context, Object value, boolean root) {
+        
+        UserInstance userInstance = (UserInstance) context.get(UserInstance.class);
+        
+        boolean expanded = tree.isExpanded(path);
+        String id = userInstance.getClientRenderId(component);
+        Element eElement = document.createElement("e");
+        eElement.setAttribute("i", id);
+        if (path != null) {
+            TreePath parentPath = path.getParentPath();
+            if (parentPath != null) {
+                eElement.setAttribute("p", userInstance.getClientRenderId(tree.getComponent(parentPath, 0)));
+            }
+        }
+        boolean leaf = value != null && model.isLeaf(value);
+        if (path == null) {
+            eElement.setAttribute("h", "1");
+        } else {
+            if (expanded) {
+                eElement.setAttribute("ex", "1");
+            } else {
+                if (leaf) {
+                    eElement.setAttribute("l", "1");
+                }
+            }
+            if (root) {
+                eElement.setAttribute("r", "1");
+            }
+        }
+        
+        if (!renderState.isSent(path)) {
+            for (int i = 1; i < columnCount; ++i) {
+                Component columnComponent = tree.getComponent(path, i);
+                Element columnElement = document.createElement("c");
+                columnElement.setAttribute("i", userInstance.getClientRenderId(columnComponent));
+                eElement.appendChild(columnElement);
+            }
+        }
+        return eElement;
+    }
+    
+    private static int getColumnCount(Tree tree) {
+        return tree.getColumnModel().getColumnCount();
+    }
+
+}
