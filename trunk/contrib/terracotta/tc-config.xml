<tc:tc-config xsi:schemaLocation="http://www.terracotta.org/schema/terracotta-4.xsd" xmlns:tc="http://www.terracotta.org/config" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <!--Tell DSO where the Terracotta server can be found; 
       See the Terracotta DSO Guide for additional information.-->
  <servers>
    <server host="localhost">
        <dso-port>9510</dso-port>
    </server>
    <update-check>
      <enabled>true</enabled>
    </update-check>
  </servers>
  <application>
    <dso>
        <roots>
        <root>
          <field-name>nextapp.echo.webcontainer.WebContainerServlet.services</field-name>
        </root>
      </roots>
        <locks>
                <autolock auto-synchronized="false">
                        <method-expression>* nextapp.echo.webcontainer.ServiceRegistry.add(..)</method-expression>
                        <lock-level>write</lock-level>
                </autolock>
                <autolock auto-synchronized="false">
                        <method-expression>* nextapp.echo.webcontainer.ServiceRegistry.remove(..)</method-expression>
                        <lock-level>write</lock-level>
                </autolock>
                <autolock auto-synchronized="true">
                        <method-expression>* nextapp.echo.webcontainer.ServiceRegistry.get(..)</method-expression>
                        <lock-level>read</lock-level>
                </autolock>
                <autolock auto-synchronized="true">
                        <method-expression>* org.apache.catalina.core.StandardContext.stop(..)</method-expression>
                        <lock-level>write</lock-level>
                </autolock>
        </locks>
      <!--Our app requires these custom objects/classes to be shared - the following declarations
           tells DSO which ones they are. When the app runs under DSO, instances of these classes
           will broadcast changes in their state.
 
           A good idiom when writing an app that you intend to cluster via TC DSO, is to group the 
           classes you wish to share under a single package (although if you follow the MVC pattern
           this tends to happen naturally) - this way the list of classes you wish to instrument
           can be concise-->
      <instrumented-classes>
        <!--Include all classes for DSO instrumentation-->
        <include>
          <class-expression>nextapp..*</class-expression>
          <honor-transient>false</honor-transient>
        </include>
        <include>
          <class-expression>org.sgodden..*</class-expression>
          <honor-transient>true</honor-transient>
        </include>
        <include>
            <class-expression>groovy..*</class-expression>
            <honor-transient>true</honor-transient>
        </include>
        <include>
            <class-expression>org.codehaus.groovy..*</class-expression>
            <honor-transient>true</honor-transient>
        </include>
                <include>
                        <class-expression>nextapp.echo.webcontainer.util.IdTable</class-expression>
                        <on-load>
                                <execute><![CDATA[
self.idToReferenceMap = new java.util.HashMap();
self.referenceQueue = new java.lang.ref.ReferenceQueue();
                                ]]></execute>
                        </on-load>
                </include>
        <include>
                <class-expression>sun.awt.EventListenerAggregate</class-expression>
        </include>
        <include>
                <class-expression>sun.util.calendar.ZoneInfo</class-expression>
        </include>
        <!--But exclude Tomcat internals to improve performance of webapp load-->
        <exclude>org.apache.coyote..*</exclude>
        <exclude>org.apache.catalina..*</exclude>
        <exclude>org.apache.jasper..*</exclude>
        <exclude>org.apache.tomcat..*</exclude>
      </instrumented-classes>
      <!--Tell DSO which applications in your web container is using DSO-->
      <web-applications>
        <web-application>echo3ext20</web-application>
      </web-applications>

      <additional-boot-jar-classes>
        <include>java.beans.PropertyChangeSupport</include>
        <include>java.util.Locale</include>
        <include>java.util.TimeZone</include>
        <include>sun.util.calendar.ZoneInfo</include>
        <include>sun.awt.EventListenerAggregate</include>
      </additional-boot-jar-classes>

                <transient-fields>
                        <field-name>nextapp.echo.app.ApplicationInstance.focusedComponent</field-name>
                        <field-name>nextapp.echo.webcontainer.util.IdTable.referenceQueue</field-name>
                        <field-name>nextapp.echo.webcontainer.util.IdTable.idToReferenceMap</field-name>
                        <field-name>org.codehaus.groovy.runtime.metaclass.MetaClassRegistryImpl.locallyKnown</field-name>
                        <field-name>org.codehaus.groovy.runtime.metaclass.MemoryAwareConcurrentReadMap.queue</field-name>
                </transient-fields>
    </dso>
  </application>
</tc:tc-config>
